"use strict";(self.webpackChunkfroyo=self.webpackChunkfroyo||[]).push([[6707],{3905:(e,n,t)=>{t.d(n,{Zo:()=>u,kt:()=>h});var o=t(7294);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function a(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);n&&(o=o.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,o)}return t}function s(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?a(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function p(e,n){if(null==e)return{};var t,o,r=function(e,n){if(null==e)return{};var t,o,r={},a=Object.keys(e);for(o=0;o<a.length;o++)t=a[o],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(o=0;o<a.length;o++)t=a[o],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var c=o.createContext({}),i=function(e){var n=o.useContext(c),t=n;return e&&(t="function"==typeof e?e(n):s(s({},n),e)),t},u=function(e){var n=i(e.components);return o.createElement(c.Provider,{value:n},e.children)},l="mdxType",d={inlineCode:"code",wrapper:function(e){var n=e.children;return o.createElement(o.Fragment,{},n)}},m=o.forwardRef((function(e,n){var t=e.components,r=e.mdxType,a=e.originalType,c=e.parentName,u=p(e,["components","mdxType","originalType","parentName"]),l=i(t),m=r,h=l["".concat(c,".").concat(m)]||l[m]||d[m]||a;return t?o.createElement(h,s(s({ref:n},u),{},{components:t})):o.createElement(h,s({ref:n},u))}));function h(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var a=t.length,s=new Array(a);s[0]=m;var p={};for(var c in n)hasOwnProperty.call(n,c)&&(p[c]=n[c]);p.originalType=e,p[l]="string"==typeof e?e:r,s[1]=p;for(var i=2;i<a;i++)s[i]=t[i];return o.createElement.apply(null,s)}return o.createElement.apply(null,t)}m.displayName="MDXCreateElement"},3262:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>s,default:()=>l,frontMatter:()=>a,metadata:()=>p,toc:()=>i});var o=t(7462),r=(t(7294),t(3905));const a={},s="Subcomponents",p={unversionedId:"advanced/subcomponents",id:"advanced/subcomponents",title:"Subcomponents",description:"This guide explains how to add other components to an instance.",source:"@site/docs/advanced/subcomponents.md",sourceDirName:"advanced",slug:"/advanced/subcomponents",permalink:"/froyo/docs/advanced/subcomponents",draft:!1,editUrl:"https://github.com/marksmccann/froyo/docs/advanced/subcomponents.md",tags:[],version:"current",frontMatter:{},sidebar:"docs",previous:{title:"External Control",permalink:"/froyo/docs/advanced/external-control"},next:{title:"Define Component",permalink:"/froyo/docs/api/define-component"}},c={},i=[{value:"Adding components",id:"adding-components",level:2},{value:"Updating a subcomponent",id:"updating-a-subcomponent",level:2},{value:"Subscribing to subcomponents",id:"subscribing-to-subcomponents",level:2}],u={toc:i};function l(e){let{components:n,...t}=e;return(0,r.kt)("wrapper",(0,o.Z)({},u,t,{components:n,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"subcomponents"},"Subcomponents"),(0,r.kt)("p",null,"This guide explains how to add other components to an instance."),(0,r.kt)("h2",{id:"adding-components"},"Adding components"),(0,r.kt)("p",null,'There are times a component needs to instantiate another component within itself. These nested components are are known as "subcomponents". Use the ',(0,r.kt)("a",{parentName:"p",href:"/froyo/docs/api/define-component#components"},"components options")," to accomplish this."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"// subcomponent\nconst Topping = defineComponent({\n    state: {\n        type: {\n            type: String,\n            default: 'sprinkles',\n        },\n    },\n    render: {\n        $root() {\n            return this.type;\n        },\n    },\n});\n\n// parent component\nconst FrozenYogurt = defineComponent({\n    components: {\n        topping() {\n            return {\n                constructor: Topping,\n                root: this.$root,\n            };\n        },\n    },\n});\n")),(0,r.kt)("br",null),(0,r.kt)("hr",null),(0,r.kt)("h2",{id:"updating-a-subcomponent"},"Updating a subcomponent"),(0,r.kt)("p",null,"Use the ",(0,r.kt)("inlineCode",{parentName:"p"},"state")," property to define or control the state of the subcomponent. If state values from ",(0,r.kt)("inlineCode",{parentName:"p"},"this")," are applied to the subcomponent state, the states will be bound. This means that when the state of the parent changes, the corresponding state of the subcomponent will also change."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"const FrozenYogurt = defineComponent({\n    state: {\n        topping: {\n            type: String,\n            default: 'Chocolate Syrup',\n        },\n    },\n    components: {\n        topping() {\n            return {\n                constructor: Topping,\n                root: this.$root,\n                state: {\n                    type: this.topping, // <-- binds the states\n                },\n            };\n        },\n    },\n});\n")),(0,r.kt)("br",null),(0,r.kt)("hr",null),(0,r.kt)("h2",{id:"subscribing-to-subcomponents"},"Subscribing to subcomponents"),(0,r.kt)("p",null,"There are times it may be necessary to update the state of the parent component when the state of the child has changed. To accomplish this, add an entry to the subcomponent's ",(0,r.kt)("inlineCode",{parentName:"p"},"subscribe")," option. Each key in this object must be the name of the state property to subscribe to, while the corresponding value is a function that is called when the value changes."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"const FrozenYogurt = defineComponent({\n    state: {\n        topping: {\n            type: String,\n            default: 'Chocolate Syrup',\n        },\n    },\n    components: {\n        topping() {\n            return {\n                constructor: Topping,\n                root: this.$root,\n                state: { type: this.topping },\n                subscribe: {\n                    type: (value) => {\n                        this.topping = value; // <-- update the parent\n                    },\n                },\n            };\n        },\n    },\n});\n")))}l.isMDXComponent=!0}}]);