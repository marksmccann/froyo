"use strict";(self.webpackChunkfroyo=self.webpackChunkfroyo||[]).push([[9963],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>m});var o=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,o,r=function(e,t){if(null==e)return{};var n,o,r={},a=Object.keys(e);for(o=0;o<a.length;o++)n=a[o],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(o=0;o<a.length;o++)n=a[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var i=o.createContext({}),c=function(e){var t=o.useContext(i),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},p=function(e){var t=c(e.components);return o.createElement(i.Provider,{value:t},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},f=o.forwardRef((function(e,t){var n=e.components,r=e.mdxType,a=e.originalType,i=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),u=c(n),f=r,m=u["".concat(i,".").concat(f)]||u[f]||d[f]||a;return n?o.createElement(m,l(l({ref:t},p),{},{components:n})):o.createElement(m,l({ref:t},p))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var a=n.length,l=new Array(a);l[0]=f;var s={};for(var i in t)hasOwnProperty.call(t,i)&&(s[i]=t[i]);s.originalType=e,s[u]="string"==typeof e?e:r,l[1]=s;for(var c=2;c<a;c++)l[c]=n[c];return o.createElement.apply(null,l)}return o.createElement.apply(null,n)}f.displayName="MDXCreateElement"},6888:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>i,contentTitle:()=>l,default:()=>u,frontMatter:()=>a,metadata:()=>s,toc:()=>c});var o=n(7462),r=(n(7294),n(3905));const a={},l="External Control",s={unversionedId:"advanced/external-control",id:"advanced/external-control",title:"External Control",description:"This guide outlines a technique for controlling a component externally.",source:"@site/docs/advanced/external-control.md",sourceDirName:"advanced",slug:"/advanced/external-control",permalink:"/froyo/docs/advanced/external-control",draft:!1,editUrl:"https://github.com/marksmccann/froyo/docs/advanced/external-control.md",tags:[],version:"current",frontMatter:{},sidebar:"docs",previous:{title:"Observer Pattern",permalink:"/froyo/docs/advanced/observer-pattern"},next:{title:"Subcomponents",permalink:"/froyo/docs/advanced/subcomponents"}},i={},c=[{value:"Enabling external control",id:"enabling-external-control",level:2},{value:"Readonly state properties",id:"readonly-state-properties",level:2}],p={toc:c};function u(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,o.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"external-control"},"External Control"),(0,r.kt)("p",null,"This guide outlines a technique for controlling a component externally."),(0,r.kt)("h2",{id:"enabling-external-control"},"Enabling external control"),(0,r.kt)("p",null,'In some use cases, it may be useful to give consumers the ability to manually control the state of a component externally. To accomplish this, define an optional state property that expects a function. As a matter of convention, this property should begin with "on". Then, call this function (when it exists) when the component state is supposed to change.'),(0,r.kt)("admonition",{type:"tip"},(0,r.kt)("p",{parentName:"admonition"},"Use the ",(0,r.kt)("a",{parentName:"p",href:"/froyo/docs/advanced/observer-pattern"},"observer pattern")," instead of this option if you only need to respond to state changes.")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"defineComponent({\n    state: {\n        open: {\n            type: Boolean,\n            default: false,\n        },\n        onOpen: {\n            type: Function,\n            default: null,\n        },\n    },\n    data: {\n        handleOpen() {\n            if (this.onOpen) {\n                this.onOpen(true);\n            } else {\n                this.open = true;\n            }\n        },\n    },\n    events: {\n        $root() {\n            return {\n                click: this.handleOpen,\n            };\n        },\n    },\n});\n")),(0,r.kt)("p",null,'This will then allow the consumer to "take control" of the component by providing the ',(0,r.kt)("inlineCode",{parentName:"p"},"onOpen")," state. They are now responsible for updating the state of the component; allowing them to perform tasks (e.g. asynchronous requests) before the state of the component is updated."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},'const instance = new Modal(\'#root\', {\n    // take control of the "open" state\n    onOpen: () => {\n        // the "open" state changed. Do something,\n        // like perform an asynchronous request ...\n\n        // then, update the state\n        instance.setState({ open: true });\n    },\n});\n')),(0,r.kt)("br",null),(0,r.kt)("hr",null),(0,r.kt)("h2",{id:"readonly-state-properties"},"Readonly state properties"),(0,r.kt)("p",null,"By default, ",(0,r.kt)("a",{parentName:"p",href:"/froyo/docs/api/define-component#state"},"state properties")," are public. This means that consumers can both read and set their value. However, there are times where a particular state property is only intended to be used internally. In these cases, the property can be set to ",(0,r.kt)("inlineCode",{parentName:"p"},"readonly"),". This will allow consumers to read the value of the state, but they will be unable to set it. Any attempt to do so, via the ",(0,r.kt)("a",{parentName:"p",href:"/froyo/docs/api/define-component#setstate"},"setState")," method, will result in the update being ignored and a warning being thrown (in non-production environments)."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"defineComponent({\n    state: {\n        readonlyState: {\n            readonly: true, // <-- consumers cannot set value\n        },\n    },\n});\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"const instance = new FrozenYogurt('#root');\n\ninstance.setState({ readonlyState: false }); // <-- will not work\n")))}u.isMDXComponent=!0}}]);