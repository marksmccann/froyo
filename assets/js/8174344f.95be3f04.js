"use strict";(self.webpackChunkfroyo=self.webpackChunkfroyo||[]).push([[5053],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>y});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},l=Object.keys(e);for(r=0;r<l.length;r++)n=l[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(r=0;r<l.length;r++)n=l[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=r.createContext({}),d=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},u=function(e){var t=d(e.components);return r.createElement(s.Provider,{value:t},e.children)},p="mdxType",c={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,l=e.originalType,s=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),p=d(n),m=a,y=p["".concat(s,".").concat(m)]||p[m]||c[m]||l;return n?r.createElement(y,o(o({ref:t},u),{},{components:n})):r.createElement(y,o({ref:t},u))}));function y(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var l=n.length,o=new Array(l);o[0]=m;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i[p]="string"==typeof e?e:a,o[1]=i;for(var d=2;d<l;d++)o[d]=n[d];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},5162:(e,t,n)=>{n.d(t,{Z:()=>o});var r=n(7294),a=n(6010);const l="tabItem_Ymn6";function o(e){let{children:t,hidden:n,className:o}=e;return r.createElement("div",{role:"tabpanel",className:(0,a.Z)(l,o),hidden:n},t)}},4866:(e,t,n)=>{n.d(t,{Z:()=>T});var r=n(7462),a=n(7294),l=n(6010),o=n(2466),i=n(6550),s=n(1980),d=n(7392),u=n(12);function p(e){return function(e){return a.Children.map(e,(e=>{if(!e||(0,a.isValidElement)(e)&&function(e){const{props:t}=e;return!!t&&"object"==typeof t&&"value"in t}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}(e).map((e=>{let{props:{value:t,label:n,attributes:r,default:a}}=e;return{value:t,label:n,attributes:r,default:a}}))}function c(e){const{values:t,children:n}=e;return(0,a.useMemo)((()=>{const e=t??p(n);return function(e){const t=(0,d.l)(e,((e,t)=>e.value===t.value));if(t.length>0)throw new Error(`Docusaurus error: Duplicate values "${t.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[t,n])}function m(e){let{value:t,tabValues:n}=e;return n.some((e=>e.value===t))}function y(e){let{queryString:t=!1,groupId:n}=e;const r=(0,i.k6)(),l=function(e){let{queryString:t=!1,groupId:n}=e;if("string"==typeof t)return t;if(!1===t)return null;if(!0===t&&!n)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return n??null}({queryString:t,groupId:n});return[(0,s._X)(l),(0,a.useCallback)((e=>{if(!l)return;const t=new URLSearchParams(r.location.search);t.set(l,e),r.replace({...r.location,search:t.toString()})}),[l,r])]}function h(e){const{defaultValue:t,queryString:n=!1,groupId:r}=e,l=c(e),[o,i]=(0,a.useState)((()=>function(e){let{defaultValue:t,tabValues:n}=e;if(0===n.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(t){if(!m({value:t,tabValues:n}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${t}" but none of its children has the corresponding value. Available values are: ${n.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return t}const r=n.find((e=>e.default))??n[0];if(!r)throw new Error("Unexpected error: 0 tabValues");return r.value}({defaultValue:t,tabValues:l}))),[s,d]=y({queryString:n,groupId:r}),[p,h]=function(e){let{groupId:t}=e;const n=function(e){return e?`docusaurus.tab.${e}`:null}(t),[r,l]=(0,u.Nk)(n);return[r,(0,a.useCallback)((e=>{n&&l.set(e)}),[n,l])]}({groupId:r}),f=(()=>{const e=s??p;return m({value:e,tabValues:l})?e:null})();(0,a.useLayoutEffect)((()=>{f&&i(f)}),[f]);return{selectedValue:o,selectValue:(0,a.useCallback)((e=>{if(!m({value:e,tabValues:l}))throw new Error(`Can't select invalid tab value=${e}`);i(e),d(e),h(e)}),[d,h,l]),tabValues:l}}var f=n(2389);const k="tabList__CuJ",v="tabItem_LNqP";function g(e){let{className:t,block:n,selectedValue:i,selectValue:s,tabValues:d}=e;const u=[],{blockElementScrollPositionUntilNextRender:p}=(0,o.o5)(),c=e=>{const t=e.currentTarget,n=u.indexOf(t),r=d[n].value;r!==i&&(p(t),s(r))},m=e=>{let t=null;switch(e.key){case"Enter":c(e);break;case"ArrowRight":{const n=u.indexOf(e.currentTarget)+1;t=u[n]??u[0];break}case"ArrowLeft":{const n=u.indexOf(e.currentTarget)-1;t=u[n]??u[u.length-1];break}}t?.focus()};return a.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,l.Z)("tabs",{"tabs--block":n},t)},d.map((e=>{let{value:t,label:n,attributes:o}=e;return a.createElement("li",(0,r.Z)({role:"tab",tabIndex:i===t?0:-1,"aria-selected":i===t,key:t,ref:e=>u.push(e),onKeyDown:m,onClick:c},o,{className:(0,l.Z)("tabs__item",v,o?.className,{"tabs__item--active":i===t})}),n??t)})))}function b(e){let{lazy:t,children:n,selectedValue:r}=e;const l=(Array.isArray(n)?n:[n]).filter(Boolean);if(t){const e=l.find((e=>e.props.value===r));return e?(0,a.cloneElement)(e,{className:"margin-top--md"}):null}return a.createElement("div",{className:"margin-top--md"},l.map(((e,t)=>(0,a.cloneElement)(e,{key:t,hidden:e.props.value!==r}))))}function N(e){const t=h(e);return a.createElement("div",{className:(0,l.Z)("tabs-container",k)},a.createElement(g,(0,r.Z)({},e,t)),a.createElement(b,(0,r.Z)({},e,t)))}function T(e){const t=(0,f.Z)();return a.createElement(N,(0,r.Z)({key:String(t)},e))}},1502:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>u,contentTitle:()=>s,default:()=>m,frontMatter:()=>i,metadata:()=>d,toc:()=>p});var r=n(7462),a=(n(7294),n(3905)),l=n(4866),o=n(5162);const i={},s="testing-library-froyojs",d={unversionedId:"ecosystem/testing-library-froyojs",id:"ecosystem/testing-library-froyojs",title:"testing-library-froyojs",description:"testing-library-froyojs is a package that extends @testing-library/dom to work with Froyo.",source:"@site/docs/ecosystem/testing-library-froyojs.md",sourceDirName:"ecosystem",slug:"/ecosystem/testing-library-froyojs",permalink:"/froyo/docs/ecosystem/testing-library-froyojs",draft:!1,editUrl:"https://github.com/marksmccann/froyo/docs/ecosystem/testing-library-froyojs.md",tags:[],version:"current",frontMatter:{},sidebar:"docs",previous:{title:"Create Initializer",permalink:"/froyo/docs/api/create-initializer"}},u={},p=[{value:"Installation",id:"installation",level:2},{value:"API",id:"api",level:2},{value:"<code>render</code>",id:"render",level:3},{value:"Type",id:"type",level:4},{value:"Details",id:"details",level:4},{value:"Example",id:"example",level:4},{value:"<code>cleanup</code>",id:"cleanup",level:3},{value:"Type",id:"type-1",level:4},{value:"Details",id:"details-1",level:4},{value:"Example",id:"example-1",level:4},{value:"Render Options",id:"render-options",level:2},{value:"<code>container</code>",id:"container",level:3},{value:"Type",id:"type-2",level:4},{value:"Details",id:"details-2",level:4},{value:"Example",id:"example-2",level:4},{value:"<code>baseElement</code>",id:"baseelement",level:3},{value:"Type",id:"type-3",level:4},{value:"Details",id:"details-3",level:4},{value:"Example",id:"example-3",level:4},{value:"<code>queries</code>",id:"queries",level:3},{value:"Type",id:"type-4",level:4},{value:"Details",id:"details-4",level:4},{value:"Example",id:"example-4",level:4},{value:"Render Result",id:"render-result",level:2},{value:"<code>...queries</code>",id:"queries-1",level:3},{value:"Type",id:"type-5",level:4},{value:"Details",id:"details-5",level:4},{value:"Example",id:"example-5",level:4},{value:"<code>container</code>",id:"container-1",level:3},{value:"Type",id:"type-6",level:4},{value:"<code>baseElement</code>",id:"baseelement-1",level:3},{value:"Type",id:"type-7",level:4},{value:"<code>rerender</code>",id:"rerender",level:3},{value:"Type",id:"type-8",level:4},{value:"Details",id:"details-6",level:3},{value:"Example",id:"example-6",level:4},{value:"<code>destroy</code>",id:"destroy",level:3},{value:"Type",id:"type-9",level:4},{value:"Details",id:"details-7",level:4}],c={toc:p};function m(e){let{components:t,...n}=e;return(0,a.kt)("wrapper",(0,r.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"testing-library-froyojs"},"testing-library-froyojs"),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"testing-library-froyojs")," is a package that extends ",(0,a.kt)("inlineCode",{parentName:"p"},"@testing-library/dom")," to work with ",(0,a.kt)("a",{parentName:"p",href:"https://marksmccann.github.io/froyo/"},"Froyo"),"."),(0,a.kt)("h2",{id:"installation"},"Installation"),(0,a.kt)(l.Z,{mdxType:"Tabs"},(0,a.kt)(o.Z,{value:"npm",label:"npm",default:!0,mdxType:"TabItem"},(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell"},"npm i testing-library-froyojs --save-dev\n"))),(0,a.kt)(o.Z,{value:"yarn",label:"Yarn",mdxType:"TabItem"},(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell"},"yarn add testing-library-froyojs --dev\n")))),(0,a.kt)("h2",{id:"api"},"API"),(0,a.kt)("p",null,"Froyo Testing Library re-exports everything from DOM Testing Library as well as these methods:"),(0,a.kt)("h3",{id:"render"},(0,a.kt)("inlineCode",{parentName:"h3"},"render")),(0,a.kt)("p",null,"Render markup and initialize components."),(0,a.kt)("h4",{id:"type"},"Type"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts"},"function render<T extends ComponentInstance>(\n    html: string,\n    initialize?: (() => T | T[]) | null,\n    options?: RenderOptions\n): RenderResult;\n")),(0,a.kt)("h4",{id:"details"},"Details"),(0,a.kt)("p",null,"This method injects a raw ",(0,a.kt)("inlineCode",{parentName:"p"},"html")," string into a DOM element and then calls ",(0,a.kt)("inlineCode",{parentName:"p"},"initialize")," to instantiate components."),(0,a.kt)("p",null,"The ",(0,a.kt)("inlineCode",{parentName:"p"},"initialize")," method must return a single component instance or an array of component instances."),(0,a.kt)("p",null,"An optional set of ",(0,a.kt)("a",{parentName:"p",href:"#render-options"},"configuration options")," can be provided as the third argument."),(0,a.kt)("h4",{id:"example"},"Example"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"import '@testing-library/jest-dom';\nimport { defineComponent } from 'froyojs';\nimport { render } from 'testing-library-froyojs';\n\nconst HelloWorld = defineComponent({\n    state: {\n        message: {\n            default: 'Hello, World!',\n        },\n    },\n    render: {\n        $root() {\n            return this.$state.message;\n        },\n    },\n});\n\ntest('renders a greeting', () => {\n    const { getByText } = render(\n        '<div id=\"root\"></div>',\n        () => new HelloWorld('#root')\n    );\n\n    expect(getByText('Hello, world!')).toBeInTheDocument();\n});\n")),(0,a.kt)("h3",{id:"cleanup"},(0,a.kt)("inlineCode",{parentName:"h3"},"cleanup")),(0,a.kt)("p",null,"Remove active processes created by ",(0,a.kt)("inlineCode",{parentName:"p"},"render"),"."),(0,a.kt)("h4",{id:"type-1"},"Type"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts"},"function cleanup(): void;\n")),(0,a.kt)("h4",{id:"details-1"},"Details"),(0,a.kt)("p",null,"This method destroys all active component instances and removes all DOM elements generated by ",(0,a.kt)("inlineCode",{parentName:"p"},"render"),"."),(0,a.kt)("p",null,"This method should be called after every test in order to avoid potential memory leaks and to ensure a sterile testing environment."),(0,a.kt)("p",null,"Testing frameworks that support the ",(0,a.kt)("inlineCode",{parentName:"p"},"afterEach")," or ",(0,a.kt)("inlineCode",{parentName:"p"},"teardown")," globals (e.g. mocha, Jest, and Jasmine) automatically call this method after every test."),(0,a.kt)("h4",{id:"example-1"},"Example"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"import { cleanup } from 'testing-library-froyojs';\n\ncleanup();\n")),(0,a.kt)("h2",{id:"render-options"},"Render Options"),(0,a.kt)("p",null,"The ",(0,a.kt)("inlineCode",{parentName:"p"},"render")," method takes the following options:"),(0,a.kt)("h3",{id:"container"},(0,a.kt)("inlineCode",{parentName:"h3"},"container")),(0,a.kt)("p",null,"Optionally declare a custom element to render within."),(0,a.kt)("h4",{id:"type-2"},"Type"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts"},"interface RenderOptions {\n    container?: Element | DocumentFragment;\n}\n")),(0,a.kt)("h4",{id:"details-2"},"Details"),(0,a.kt)("p",null,"By default, a ",(0,a.kt)("inlineCode",{parentName:"p"},"div")," is generated and appended to the base element."),(0,a.kt)("p",null,"provided, the element will not be appended to ",(0,a.kt)("inlineCode",{parentName:"p"},"document.body")," automatically."),(0,a.kt)("h4",{id:"example-2"},"Example"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts"},"const container = document.createElement('div');\n\nconst result = render('<div id=\"root\"></div>', () => new HelloWorld('#root'), {\n    container: document.body.appendChild(container),\n});\n")),(0,a.kt)("h3",{id:"baseelement"},(0,a.kt)("inlineCode",{parentName:"h3"},"baseElement")),(0,a.kt)("p",null,"Optionally declare the target element for the container and all queries."),(0,a.kt)("h4",{id:"type-3"},"Type"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts"},"interface RenderOptions {\n    baseElement?: Element | DocumentFragment;\n}\n")),(0,a.kt)("h4",{id:"details-3"},"Details"),(0,a.kt)("p",null,"If the container is specified, then this defaults to that, otherwise this defaults to ",(0,a.kt)("inlineCode",{parentName:"p"},"document.body"),"."),(0,a.kt)("p",null,"This element is used as the target element for all of the query methods."),(0,a.kt)("p",null,"If provided, the element will not be appended to ",(0,a.kt)("inlineCode",{parentName:"p"},"document.body")," automatically."),(0,a.kt)("h4",{id:"example-3"},"Example"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"const baseElement = document.createElement('div');\n\nconst result = render('<div id=\"root\"></div>', () => new HelloWorld('#root'), {\n    baseElement: document.body.appendChild(baseElement),\n});\n")),(0,a.kt)("h3",{id:"queries"},(0,a.kt)("inlineCode",{parentName:"h3"},"queries")),(0,a.kt)("p",null,"Declare a custom set of query methods."),(0,a.kt)("h4",{id:"type-4"},"Type"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts"},"interface RenderOptions {\n    queries?: Queries;\n}\n")),(0,a.kt)("h4",{id:"details-4"},"Details"),(0,a.kt)("p",null,"Customize the set of query methods to be bound to the ",(0,a.kt)("inlineCode",{parentName:"p"},"baseElement")," and returned in the ",(0,a.kt)("a",{parentName:"p",href:"#queries-1"},"result"),"."),(0,a.kt)("p",null,"This option overrides the default set of queries from DOM Testing Library unless merged."),(0,a.kt)("p",null,"Learn more about creating ",(0,a.kt)("a",{parentName:"p",href:"https://testing-library.com/docs/dom-testing-library/api-custom-queries/"},"custom queries")," on the Testing Library website."),(0,a.kt)("h4",{id:"example-4"},"Example"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"import * as myQueries from 'my-query-library';\nimport { queries } from 'testing-library-froyojs';\n\nconst { getByMyQuery } = render(\n    '<div id=\"root\"></div>',\n    () => new HelloWorld('#root'),\n    queries: { ...queries, ...myQueries },\n);\n")),(0,a.kt)("h2",{id:"render-result"},"Render Result"),(0,a.kt)("p",null,"The render method returns an object with the following properties:"),(0,a.kt)("h3",{id:"queries-1"},(0,a.kt)("inlineCode",{parentName:"h3"},"...queries")),(0,a.kt)("p",null,"The query functions bound to the ",(0,a.kt)("inlineCode",{parentName:"p"},"baseElement"),"."),(0,a.kt)("h4",{id:"type-5"},"Type"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts"},"interface RenderResult {\n    ...queries: Queries\n};\n")),(0,a.kt)("h4",{id:"details-5"},"Details"),(0,a.kt)("p",null,"By default, the ",(0,a.kt)("a",{parentName:"p",href:"https://testing-library.com/docs/queries/about"},"queries from DOM Testing Library")," are automatically returned and are bound to the ",(0,a.kt)("inlineCode",{parentName:"p"},"baseElement"),"."),(0,a.kt)("p",null,"This list can be customized via the ",(0,a.kt)("a",{parentName:"p",href:"#queries"},"queries")," option."),(0,a.kt)("h4",{id:"example-5"},"Example"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"const { getByText, queryByLabelText } = render(\n    '<div id=\"root\"></div>',\n    () => new HelloWorld('#root')\n);\n")),(0,a.kt)("h3",{id:"container-1"},(0,a.kt)("inlineCode",{parentName:"h3"},"container")),(0,a.kt)("p",null,"The containing DOM node for the rendered ",(0,a.kt)("inlineCode",{parentName:"p"},"html"),"."),(0,a.kt)("h4",{id:"type-6"},"Type"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts"},"interface RenderResult {\n    container: Element;\n}\n")),(0,a.kt)("h3",{id:"baseelement-1"},(0,a.kt)("inlineCode",{parentName:"h3"},"baseElement")),(0,a.kt)("p",null,"The element where the container was appended and queries are bound."),(0,a.kt)("h4",{id:"type-7"},"Type"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts"},"interface RenderResult {\n    baseElement: Element;\n}\n")),(0,a.kt)("h3",{id:"rerender"},(0,a.kt)("inlineCode",{parentName:"h3"},"rerender")),(0,a.kt)("p",null,"Update the state of a single component instance."),(0,a.kt)("h4",{id:"type-8"},"Type"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts"},"function rerender(\n    root: Element | string,\n    stateChanges?: Record<string, any>\n) => void\n")),(0,a.kt)("h3",{id:"details-6"},"Details"),(0,a.kt)("p",null,"The first argument must be an element (or query string) that matches the root element of the desired component instance."),(0,a.kt)("p",null,"If a corresponding instance is identified, its state is then updated with the data passed to the second argument."),(0,a.kt)("p",null,"If no instance is found for the given root, a warning will be thrown."),(0,a.kt)("h4",{id:"example-6"},"Example"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"import { render } from 'testing-library-froyo';\n\nconst { rerender } = render(\n    '<div id=\"root\"></div>',\n    () => new HelloWorld('#root')\n);\n\n// updates the instance and renders a different message\nrerender('#root', { message: 'Goodbye, World!' });\n")),(0,a.kt)("h3",{id:"destroy"},(0,a.kt)("inlineCode",{parentName:"h3"},"destroy")),(0,a.kt)("p",null,"Remove all component instances and generated elements."),(0,a.kt)("h4",{id:"type-9"},"Type"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts"},"function destroy(): void;\n")),(0,a.kt)("h4",{id:"details-7"},"Details"),(0,a.kt)("p",null,"Destroys all component instances returned by the ",(0,a.kt)("inlineCode",{parentName:"p"},"initialize")," method."),(0,a.kt)("p",null,"Removes all generated elements from the DOM, namely the container. Custom elements are not removed."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"import { render } from '@testing-library/react';\n\nconst { destroy } = render(\n    '<div id=\"root\"></div>',\n    () => new HelloWorld('#root')\n);\n\ndestroy();\n")))}m.isMDXComponent=!0}}]);