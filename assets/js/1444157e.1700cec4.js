"use strict";(self.webpackChunkfroyo=self.webpackChunkfroyo||[]).push([[8212],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>h});var a=n(7294);function l(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function r(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){l(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,a,l=function(e,t){if(null==e)return{};var n,a,l={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(l[n]=e[n]);return l}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(l[n]=e[n])}return l}var s=a.createContext({}),p=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):r(r({},t),e)),n},u=function(e){var t=p(e.components);return a.createElement(s.Provider,{value:t},e.children)},d="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},c=a.forwardRef((function(e,t){var n=e.components,l=e.mdxType,o=e.originalType,s=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),d=p(n),c=l,h=d["".concat(s,".").concat(c)]||d[c]||m[c]||o;return n?a.createElement(h,r(r({ref:t},u),{},{components:n})):a.createElement(h,r({ref:t},u))}));function h(e,t){var n=arguments,l=t&&t.mdxType;if("string"==typeof e||l){var o=n.length,r=new Array(o);r[0]=c;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i[d]="string"==typeof e?e:l,r[1]=i;for(var p=2;p<o;p++)r[p]=n[p];return a.createElement.apply(null,r)}return a.createElement.apply(null,n)}c.displayName="MDXCreateElement"},5162:(e,t,n)=>{n.d(t,{Z:()=>r});var a=n(7294),l=n(6010);const o="tabItem_Ymn6";function r(e){let{children:t,hidden:n,className:r}=e;return a.createElement("div",{role:"tabpanel",className:(0,l.Z)(o,r),hidden:n},t)}},4866:(e,t,n)=>{n.d(t,{Z:()=>C});var a=n(7462),l=n(7294),o=n(6010),r=n(2466),i=n(6550),s=n(1980),p=n(7392),u=n(12);function d(e){return function(e){return l.Children.map(e,(e=>{if(!e||(0,l.isValidElement)(e)&&function(e){const{props:t}=e;return!!t&&"object"==typeof t&&"value"in t}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}(e).map((e=>{let{props:{value:t,label:n,attributes:a,default:l}}=e;return{value:t,label:n,attributes:a,default:l}}))}function m(e){const{values:t,children:n}=e;return(0,l.useMemo)((()=>{const e=t??d(n);return function(e){const t=(0,p.l)(e,((e,t)=>e.value===t.value));if(t.length>0)throw new Error(`Docusaurus error: Duplicate values "${t.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[t,n])}function c(e){let{value:t,tabValues:n}=e;return n.some((e=>e.value===t))}function h(e){let{queryString:t=!1,groupId:n}=e;const a=(0,i.k6)(),o=function(e){let{queryString:t=!1,groupId:n}=e;if("string"==typeof t)return t;if(!1===t)return null;if(!0===t&&!n)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return n??null}({queryString:t,groupId:n});return[(0,s._X)(o),(0,l.useCallback)((e=>{if(!o)return;const t=new URLSearchParams(a.location.search);t.set(o,e),a.replace({...a.location,search:t.toString()})}),[o,a])]}function k(e){const{defaultValue:t,queryString:n=!1,groupId:a}=e,o=m(e),[r,i]=(0,l.useState)((()=>function(e){let{defaultValue:t,tabValues:n}=e;if(0===n.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(t){if(!c({value:t,tabValues:n}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${t}" but none of its children has the corresponding value. Available values are: ${n.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return t}const a=n.find((e=>e.default))??n[0];if(!a)throw new Error("Unexpected error: 0 tabValues");return a.value}({defaultValue:t,tabValues:o}))),[s,p]=h({queryString:n,groupId:a}),[d,k]=function(e){let{groupId:t}=e;const n=function(e){return e?`docusaurus.tab.${e}`:null}(t),[a,o]=(0,u.Nk)(n);return[a,(0,l.useCallback)((e=>{n&&o.set(e)}),[n,o])]}({groupId:a}),f=(()=>{const e=s??d;return c({value:e,tabValues:o})?e:null})();(0,l.useLayoutEffect)((()=>{f&&i(f)}),[f]);return{selectedValue:r,selectValue:(0,l.useCallback)((e=>{if(!c({value:e,tabValues:o}))throw new Error(`Can't select invalid tab value=${e}`);i(e),p(e),k(e)}),[p,k,o]),tabValues:o}}var f=n(2389);const g="tabList__CuJ",v="tabItem_LNqP";function y(e){let{className:t,block:n,selectedValue:i,selectValue:s,tabValues:p}=e;const u=[],{blockElementScrollPositionUntilNextRender:d}=(0,r.o5)(),m=e=>{const t=e.currentTarget,n=u.indexOf(t),a=p[n].value;a!==i&&(d(t),s(a))},c=e=>{let t=null;switch(e.key){case"Enter":m(e);break;case"ArrowRight":{const n=u.indexOf(e.currentTarget)+1;t=u[n]??u[0];break}case"ArrowLeft":{const n=u.indexOf(e.currentTarget)-1;t=u[n]??u[u.length-1];break}}t?.focus()};return l.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,o.Z)("tabs",{"tabs--block":n},t)},p.map((e=>{let{value:t,label:n,attributes:r}=e;return l.createElement("li",(0,a.Z)({role:"tab",tabIndex:i===t?0:-1,"aria-selected":i===t,key:t,ref:e=>u.push(e),onKeyDown:c,onClick:m},r,{className:(0,o.Z)("tabs__item",v,r?.className,{"tabs__item--active":i===t})}),n??t)})))}function N(e){let{lazy:t,children:n,selectedValue:a}=e;const o=(Array.isArray(n)?n:[n]).filter(Boolean);if(t){const e=o.find((e=>e.props.value===a));return e?(0,l.cloneElement)(e,{className:"margin-top--md"}):null}return l.createElement("div",{className:"margin-top--md"},o.map(((e,t)=>(0,l.cloneElement)(e,{key:t,hidden:e.props.value!==a}))))}function b(e){const t=k(e);return l.createElement("div",{className:(0,o.Z)("tabs-container",g)},l.createElement(y,(0,a.Z)({},e,t)),l.createElement(N,(0,a.Z)({},e,t)))}function C(e){const t=(0,f.Z)();return l.createElement(b,(0,a.Z)({key:String(t)},e))}},816:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>u,contentTitle:()=>s,default:()=>c,frontMatter:()=>i,metadata:()=>p,toc:()=>d});var a=n(7462),l=(n(7294),n(3905)),o=n(4866),r=n(5162);const i={},s="Define Component",p={unversionedId:"api/define-component",id:"api/define-component",title:"Define Component",description:"This page contains a detailed API reference for the defineComponent function.",source:"@site/docs/api/define-component.md",sourceDirName:"api",slug:"/api/define-component",permalink:"/froyo/docs/api/define-component",draft:!1,editUrl:"https://github.com/marksmccann/froyo/docs/api/define-component.md",tags:[],version:"current",frontMatter:{},sidebar:"docs",previous:{title:"Subcomponents",permalink:"/froyo/docs/advanced/subcomponents"},next:{title:"Create Initializer",permalink:"/froyo/docs/api/create-initializer"}},u={},d=[{value:"Import",id:"import",level:2},{value:"Reference",id:"reference",level:2},{value:"<code>defineComponent</code>",id:"definecomponent",level:3},{value:"Type",id:"type",level:4},{value:"Details",id:"details",level:4},{value:"Example",id:"example",level:4},{value:"<code>constructor</code>",id:"constructor",level:3},{value:"Type",id:"type-1",level:4},{value:"Details",id:"details-1",level:4},{value:"Example",id:"example-1",level:4},{value:"<code>displayName</code>",id:"displayname",level:3},{value:"Type",id:"type-2",level:4},{value:"Details",id:"details-2",level:4},{value:"Example",id:"example-2",level:4},{value:"<code>this</code>",id:"this",level:3},{value:"Type",id:"type-3",level:4},{value:"Details",id:"details-3",level:4},{value:"Example",id:"example-3",level:4},{value:"Configuration Options",id:"configuration-options",level:2},{value:"<code>name</code>",id:"name",level:3},{value:"Type",id:"type-4",level:4},{value:"Details",id:"details-4",level:4},{value:"Example",id:"example-4",level:4},{value:"<code>state</code>",id:"state",level:3},{value:"Type",id:"type-5",level:4},{value:"Details",id:"details-5",level:4},{value:"Example",id:"example-5",level:4},{value:"See also:",id:"see-also",level:4},{value:"<code>nodes</code>",id:"nodes",level:3},{value:"Type",id:"type-6",level:4},{value:"Details",id:"details-6",level:4},{value:"Example",id:"example-6",level:4},{value:"See also:",id:"see-also-1",level:4},{value:"<code>methods</code>",id:"methods",level:3},{value:"Type",id:"type-7",level:4},{value:"Details",id:"details-7",level:4},{value:"Example",id:"example-7",level:4},{value:"<code>components</code>",id:"components",level:3},{value:"Type",id:"type-8",level:4},{value:"Details",id:"details-8",level:4},{value:"Example",id:"example-8",level:4},{value:"See also:",id:"see-also-2",level:4},{value:"<code>events</code>",id:"events",level:3},{value:"Type",id:"type-9",level:4},{value:"Details",id:"details-9",level:4},{value:"Example",id:"example-9",level:4},{value:"See also:",id:"see-also-3",level:4},{value:"<code>render</code>",id:"render",level:3},{value:"Type",id:"type-10",level:4},{value:"Details",id:"details-10",level:4},{value:"Example",id:"example-10",level:4},{value:"See also:",id:"see-also-4",level:4},{value:"<code>hooks</code>",id:"hooks",level:3},{value:"Type",id:"type-11",level:4},{value:"Details",id:"details-11",level:4},{value:"Example",id:"example-11",level:4},{value:"See also:",id:"see-also-5",level:4},{value:"Component Instance",id:"component-instance",level:2},{value:"<code>state</code>",id:"state-1",level:3},{value:"Type",id:"type-12",level:4},{value:"Details",id:"details-12",level:4},{value:"Example",id:"example-12",level:4},{value:"<code>root</code>",id:"root",level:3},{value:"Type",id:"type-13",level:4},{value:"Details",id:"details-13",level:4},{value:"Example",id:"example-13",level:4},{value:"<code>setState</code>",id:"setstate",level:3},{value:"Type",id:"type-14",level:4},{value:"Details",id:"details-14",level:4},{value:"Example",id:"example-14",level:4},{value:"See also:",id:"see-also-6",level:4},{value:"<code>subscribe</code>",id:"subscribe",level:3},{value:"Type",id:"type-15",level:4},{value:"See also:",id:"see-also-7",level:4},{value:"Details",id:"details-15",level:4},{value:"Example",id:"example-15",level:4},{value:"<code>unsubscribe</code>",id:"unsubscribe",level:3},{value:"Type",id:"type-16",level:4},{value:"Details",id:"details-16",level:4},{value:"Example",id:"example-16",level:4},{value:"<code>destroy</code>",id:"destroy",level:3},{value:"Type",id:"type-17",level:4},{value:"Details",id:"details-17",level:4},{value:"Example",id:"example-17",level:4}],m={toc:d};function c(e){let{components:t,...n}=e;return(0,l.kt)("wrapper",(0,a.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("h1",{id:"define-component"},"Define Component"),(0,l.kt)("p",null,"This page contains a detailed API reference for the ",(0,l.kt)("inlineCode",{parentName:"p"},"defineComponent")," function."),(0,l.kt)("h2",{id:"import"},"Import"),(0,l.kt)(o.Z,{mdxType:"Tabs"},(0,l.kt)(r.Z,{value:"es6",label:"ES6",default:!0,mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-js"},"import { defineComponent } from 'froyojs';\n"))),(0,l.kt)(r.Z,{value:"commonjs",label:"CommonJS",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-js"},"const { defineComponent } = require('froyojs');\n"))),(0,l.kt)(r.Z,{value:"browser",label:"Browser (CDN)",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-js"},"window.froyojs.defineComponent;\n")))),(0,l.kt)("h2",{id:"reference"},"Reference"),(0,l.kt)("h3",{id:"definecomponent"},(0,l.kt)("inlineCode",{parentName:"h3"},"defineComponent")),(0,l.kt)("p",null,"Define a new Froyo component."),(0,l.kt)("h4",{id:"type"},"Type"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-ts"},"function defineComponent<T extends ComponentThis>(\n    options: ComponentOptions<T>\n): ComponentConstructor;\n")),(0,l.kt)("h4",{id:"details"},"Details"),(0,l.kt)("p",null,"This function requires a single argument which is an ",(0,l.kt)("a",{parentName:"p",href:"#configuration-options"},"object to configure")," the component. It returns a ",(0,l.kt)("a",{parentName:"p",href:"#constructor"},"component constructor")," which can be used to create ",(0,l.kt)("a",{parentName:"p",href:"#component-instance"},"component instances"),"."),(0,l.kt)("p",null,"If you are using TypeScript, the generic argument expects an object which defines the types for the ",(0,l.kt)("inlineCode",{parentName:"p"},"this")," keyword within options. When provided, this argument will add granular control, enhanced type safety, and rich autocomplete to the component options."),(0,l.kt)("h4",{id:"example"},"Example"),(0,l.kt)(o.Z,{mdxType:"Tabs"},(0,l.kt)(r.Z,{value:"js",label:"JavaScript",default:!0,mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-js"},"const FrozenYogurt = defineComponent({\n    name: 'FrozenYogurt',\n    state: {\n        flavor: {\n            type: String,\n            default: 'Vanilla',\n        },\n    },\n    nodes: {\n        button: {\n            type: 'query',\n            selector: 'button.toggle',\n        };\n        message: {\n            type: 'query',\n            selector: '.message',\n        },\n    },\n    events: {\n        button() {\n            return {\n                click: () => {\n                    this.$state.flavor = this.$state.flavor === 'Vanilla' ? 'Chocolate' : 'Vanilla';\n                };\n            };\n        },\n    },\n    render: {\n        message() {\n            return `My favorite flavor is: ${this.$state.flavor}`;\n        },\n    },\n});\n"))),(0,l.kt)(r.Z,{value:"ts",label:"TypeScript",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-js"},"const FrozenYogurt = defineComponent<{\n    $root: HTMLElement,\n    $state: {\n        flavor: string\n    },\n    button: HTMLButtonElement,\n    message: HTMLElement,\n}>({\n    name: 'FrozenYogurt',\n    state: {\n        flavor: {\n            type: String,\n            default: 'Vanilla',\n        },\n    },\n    nodes: {\n        button: {\n            type: 'query',\n            selector: 'button.toggle',\n        };\n        message: {\n            type: 'query',\n            selector: '.message',\n        },\n    },\n    events: {\n        button() {\n            return {\n                click: () => {\n                    this.$state.flavor = this.$state.flavor === 'Vanilla' ? 'Chocolate' : 'Vanilla';\n                };\n            };\n        },\n    },\n    render: {\n        message() {\n            return `My favorite flavor is: ${this.$state.flavor}`;\n        },\n    },\n});\n")))),(0,l.kt)("br",null),(0,l.kt)("h3",{id:"constructor"},(0,l.kt)("inlineCode",{parentName:"h3"},"constructor")),(0,l.kt)("p",null,"The constructor for a ",(0,l.kt)("a",{parentName:"p",href:"#component-instance"},"component instance"),"."),(0,l.kt)("h4",{id:"type-1"},"Type"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-ts"},"interface ComponentConstructor {\n    new (\n        root: string | Element,\n        state?: Record<string, any>\n    ): ComponentInstance;\n}\n")),(0,l.kt)("h4",{id:"details-1"},"Details"),(0,l.kt)("p",null,"A component constructor is generated by the ",(0,l.kt)("a",{parentName:"p",href:"#define-component"},"defineComponent")," function. It is used to generate new instances for that component definition."),(0,l.kt)("p",null,"The first argument of the constructor is required. It must be an element or a query selector for a valid element within in the DOM. The second argument is optional and is responsible for setting the initial state of the component."),(0,l.kt)("h4",{id:"example-1"},"Example"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-js"},"const instance = new FrozenYogurt(document.querySelector('#root'), {\n    flavor: 'Chocolate',\n});\n")),(0,l.kt)("br",null),(0,l.kt)("h3",{id:"displayname"},(0,l.kt)("inlineCode",{parentName:"h3"},"displayName")),(0,l.kt)("p",null,"The human-friendly name of the component."),(0,l.kt)("h4",{id:"type-2"},"Type"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-ts"},"interface ComponentConstructor {\n    get displayName(): string;\n}\n")),(0,l.kt)("h4",{id:"details-2"},"Details"),(0,l.kt)("p",null,"This readonly property is the name of the component defined by the ",(0,l.kt)("a",{parentName:"p",href:"#name"},"name option"),"."),(0,l.kt)("h4",{id:"example-2"},"Example"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-js"},'console.log(FrozenYogurt); // "FrozenYogurt"\n')),(0,l.kt)("br",null),(0,l.kt)("h3",{id:"this"},(0,l.kt)("inlineCode",{parentName:"h3"},"this")),(0,l.kt)("p",null,"The internal component instance."),(0,l.kt)("h4",{id:"type-3"},"Type"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-ts"},"type ComponentThis<T> = {\n    $root: Element;\n    $state: Record<string, any>;\n} & Record<string, any>;\n")),(0,l.kt)("h4",{id:"details-3"},"Details"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"this")," is an object that is bound to the component options and contains the following properties:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},(0,l.kt)("inlineCode",{parentName:"strong"},"$root")),": the root element (defined by the constructor)"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},(0,l.kt)("inlineCode",{parentName:"strong"},"$state")),": the reactive state (defined by the ",(0,l.kt)("inlineCode",{parentName:"li"},"state")," option)"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},(0,l.kt)("inlineCode",{parentName:"strong"},"...")),": properties defined in ",(0,l.kt)("inlineCode",{parentName:"li"},"nodes"),", ",(0,l.kt)("inlineCode",{parentName:"li"},"components"),", ",(0,l.kt)("inlineCode",{parentName:"li"},"methods"),".")),(0,l.kt)("p",null,"All functional component options (e.g. methods, components, events, render, hooks) are automatically bound to this object. This means that referencing the ",(0,l.kt)("inlineCode",{parentName:"p"},"this")," keyword from within them will give you access to the data above."),(0,l.kt)("p",null,"Since the properties from the ",(0,l.kt)("inlineCode",{parentName:"p"},"nodes"),", ",(0,l.kt)("inlineCode",{parentName:"p"},"components")," and ",(0,l.kt)("inlineCode",{parentName:"p"},"methods")," options are spread on this object, their keys must be unique or they will be overridden by one another."),(0,l.kt)("p",null,"State properties are reactive, updating the value of a state property assigned to ",(0,l.kt)("inlineCode",{parentName:"p"},"this.$state")," will trigger a component update."),(0,l.kt)("p",null,"Non-state properties can also be added or updated directly, however doing so will not trigger a component update."),(0,l.kt)("h4",{id:"example-3"},"Example"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-js"},"defineComponent({\n    hooks: {\n        $setup() {\n            console.log(this); // { $root: Element, ... }\n        },\n    },\n});\n")),(0,l.kt)("br",null),(0,l.kt)("h2",{id:"configuration-options"},"Configuration Options"),(0,l.kt)("h3",{id:"name"},(0,l.kt)("inlineCode",{parentName:"h3"},"name")),(0,l.kt)("p",null,"Define name of the component."),(0,l.kt)("h4",{id:"type-4"},"Type"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-ts"},"type ComponentOptions = {\n    name?: string;\n};\n")),(0,l.kt)("h4",{id:"details-4"},"Details"),(0,l.kt)("p",null,"This optional property defines a human-friendly name for the component and is used primarily for error messaging."),(0,l.kt)("p",null,'If a name is not provided the component will be labelled: "Unnamed component".'),(0,l.kt)("h4",{id:"example-4"},"Example"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-js"},"const FrozenYogurt = defineComponent({ name: 'FrozenYogurt' });\n\nconsole.log(FrozenYogurt.displayName); // \"FrozenYogurt\"\n")),(0,l.kt)("br",null),(0,l.kt)("h3",{id:"state"},(0,l.kt)("inlineCode",{parentName:"h3"},"state")),(0,l.kt)("p",null,"Declare and configure the reactive state of the component."),(0,l.kt)("h4",{id:"type-5"},"Type"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-ts"},"type ComponentOptions = {\n    state?: { [key: string]: StateOption };\n};\n\ntype StateOption<T = any> = {\n    type?: { new (): T };\n    required?: true;\n    default?: T;\n    readonly?: true;\n};\n")),(0,l.kt)("h4",{id:"details-5"},"Details"),(0,l.kt)("p",null,"The ",(0,l.kt)("inlineCode",{parentName:"p"},"state")," option takes an object with each key representing the name of the property."),(0,l.kt)("p",null,"The value of each property must be an object with the following options:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},(0,l.kt)("inlineCode",{parentName:"strong"},"type"))," (optional): Specifies the expected type. Can be one of the following native constructors: ",(0,l.kt)("inlineCode",{parentName:"li"},"String"),", ",(0,l.kt)("inlineCode",{parentName:"li"},"Number"),", ",(0,l.kt)("inlineCode",{parentName:"li"},"Boolean"),", ",(0,l.kt)("inlineCode",{parentName:"li"},"Array"),", ",(0,l.kt)("inlineCode",{parentName:"li"},"Object"),", ",(0,l.kt)("inlineCode",{parentName:"li"},"Date"),", ",(0,l.kt)("inlineCode",{parentName:"li"},"Function"),", or any custom constructor function. The value of each state is compared to this type and a warning will be thrown in non-production environments if it does not match."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},(0,l.kt)("inlineCode",{parentName:"strong"},"default"))," (optional): Specifies a default value. The property will be set to this value automatically when the value is ",(0,l.kt)("inlineCode",{parentName:"li"},"undefined"),"."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},(0,l.kt)("inlineCode",{parentName:"strong"},"required"))," (optional): Defines if the state property is required. In non-production environments, a warning will be thrown if the property value is ",(0,l.kt)("inlineCode",{parentName:"li"},"undefined"),"."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},(0,l.kt)("inlineCode",{parentName:"strong"},"readonly"))," (optional): Defines if the state property is readonly. If enabled, consumers will be able to read the value of the property, but will not be able to update the value of the property externally.")),(0,l.kt)("h4",{id:"example-5"},"Example"),(0,l.kt)(o.Z,{mdxType:"Tabs"},(0,l.kt)(r.Z,{value:"js",label:"JavaScript",default:!0,mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-ts"},"const FrozenYogurt = defineComponent({\n    state: {\n        price: {\n            type: Number,\n            default: 1.99,\n        },\n        flavor: {\n            type: String,\n            required: true,\n        },\n    },\n});\n"))),(0,l.kt)(r.Z,{value:"ts",label:"TypeScript",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-ts"},"const FrozenYogurt = defineComponent<{\n    $root: HTMLElement;\n    $state: {\n        price: number;\n        flavor: string;\n    };\n}>({\n    state: {\n        price: {\n            type: Number,\n            default: 1.99,\n        },\n        flavor: {\n            type: String,\n            required: true,\n        },\n    },\n});\n")))),(0,l.kt)("h4",{id:"see-also"},"See also:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"/froyo/docs/fundamentals/component-lifecycle"},"Component lifecycle")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"/froyo/docs/advanced/typechecking-state"},"Typechecking state"))),(0,l.kt)("br",null),(0,l.kt)("h3",{id:"nodes"},(0,l.kt)("inlineCode",{parentName:"h3"},"nodes")),(0,l.kt)("p",null,"Declare and configure the DOM nodes for the component."),(0,l.kt)("h4",{id:"type-6"},"Type"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-ts"},"interface ComponentOptions {\n    nodes?: { [key: string]: NodeOption };\n}\n\ntype NodeOption =\n    | {\n          type: 'text';\n          value?: string;\n      }\n    | {\n          type: 'element';\n          tagName: string;\n          className?: string;\n          attributes?: Record<string, string>;\n          content?: string;\n      }\n    | {\n          type: 'svg';\n          tagName: string;\n          className?: string;\n          attributes?: Record<string, string>;\n          content?: string;\n      }\n    | {\n          type: 'query';\n          selector: string;\n          optional?: true;\n          scope?: ($root: Element) => Element | Document;\n      }\n    | {\n          type: 'query-all';\n          selector: string;\n          optional?: true;\n          scope?: ($root: Element) => Element | Document;\n      }\n    | {\n          type: 'custom';\n          node: (\n              $root: Element\n          ) =>\n              | Text\n              | Element\n              | Element[]\n              | NodeListOf<Element>\n              | HTMLCollectionOf<Element>\n              | null;\n      };\n")),(0,l.kt)("h4",{id:"details-6"},"Details"),(0,l.kt)("p",null,"The ",(0,l.kt)("inlineCode",{parentName:"p"},"nodes")," option takes an object with each key representing the name of the property."),(0,l.kt)("p",null,"The value of each property must be an object with a ",(0,l.kt)("inlineCode",{parentName:"p"},"type")," property matching one of the following types:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},(0,l.kt)("inlineCode",{parentName:"strong"},"text")),": Creates a new text node with the following options:",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"value")," (optional): Specifies the initial text value of the node."))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},(0,l.kt)("inlineCode",{parentName:"strong"},"element")),": Creates a new HTML element with the following options:",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"tagName"),": Specifies the type of element to be created."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"className"),": Specifies a CSS class name to add to the element."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"content"),": Specifies a string to render within the element."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"attributes"),": Specifies an object of attributes to add to the element."))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},(0,l.kt)("inlineCode",{parentName:"strong"},"svg")),": Creates a new SVG element with the following options:",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"tagName"),": Specifies the type of element to be created."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"className"),": Specifies a CSS class name to add to the element."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"content"),": Specifies a string to render within the element."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"attributes"),": Specifies an object of attributes to add to the element."))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},(0,l.kt)("inlineCode",{parentName:"strong"},"query")),": Retrieves an element from the DOM with the following options:",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"selector"),": Specifies the CSS selector used to find the element."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"optional")," (optional): Defines if the element is optional. If enabled, a warning will not be thrown if no element is found."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"scope")," (optional): Declares the target of the query. By default, the root element is used. Must return an element or ",(0,l.kt)("inlineCode",{parentName:"li"},"document"),"."))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},(0,l.kt)("inlineCode",{parentName:"strong"},"query-all")),": Retrieves an array of elements from the DOM with the following options:",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"selector"),": Specifies the CSS selector used to find the elements."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"optional")," (optional): Defines if the element is optional. If enabled, a warning will not be thrown if no elements are found."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"scope")," (optional): Declares the target of the query. By default, the root element is used. Must return an element or ",(0,l.kt)("inlineCode",{parentName:"li"},"document"),"."))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},(0,l.kt)("inlineCode",{parentName:"strong"},"custom")),":",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"node"),": Declares custom node(s). The root element is passed as the first and only argument. When a ",(0,l.kt)("inlineCode",{parentName:"li"},"NodeList")," or ",(0,l.kt)("inlineCode",{parentName:"li"},"HTMLCollection")," is returned, the value is automatically converted into an array.")))),(0,l.kt)("h4",{id:"example-6"},"Example"),(0,l.kt)(o.Z,{mdxType:"Tabs"},(0,l.kt)(r.Z,{value:"js",label:"JavaScript",default:!0,mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-js"},"const FrozenYogurt = defineComponent({\n    nodes: {\n        label: {\n            type: 'text',\n            value: '$1.99',\n        },\n        cone: {\n            type: 'element',\n            tagName: 'div',\n            className: 'cone',\n        },\n        logo: {\n            type: 'svg',\n            tagName: 'svg',\n            content: '<path />',\n            attributes: {\n                width: '25px',\n                height: '25px',\n            },\n        },\n        topping: {\n            type: 'query',\n            selector: '.topping',\n            optional: true,\n        },\n        napkins: {\n            type: 'query-all',\n            selector: '.napkin',\n            scope: () => document,\n        },\n        spoon: {\n            type: 'custom',\n            node: ($root) => $root.querySelector('.spoon'),\n        },\n    },\n});\n"))),(0,l.kt)(r.Z,{value:"ts",label:"TypeScript",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-ts"},"const FrozenYogurt = defineComponent<{\n    $root: HTMLElement;\n    $state: {};\n    label: Text;\n    cone: HTMLDivElement;\n    logo: SVGPathElement;\n    topping: Element | null;\n    napkins: Element[];\n    spoon: HTMLElement | null;\n}>({\n    nodes: {\n        label: {\n            type: 'text',\n            value: '$1.99',\n        },\n        cone: {\n            type: 'element',\n            tagName: 'div',\n            className: 'cone',\n        },\n        logo: {\n            type: 'svg',\n            tagName: 'svg',\n            content: '<path />',\n            attributes: {\n                width: '25px',\n                height: '25px',\n            },\n        },\n        topping: {\n            type: 'query',\n            selector: '.topping',\n            optional: true,\n        },\n        napkins: {\n            type: 'query-all',\n            selector: '.napkin',\n            scope: () => document,\n        },\n        spoon: {\n            type: 'custom',\n            node: ($root) => $root.querySelector('.spoon'),\n        },\n    },\n});\n")))),(0,l.kt)("h4",{id:"see-also-1"},"See also:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"/froyo/docs/fundamentals/dom-management"},"DOM management")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"/froyo/docs/fundamentals/handling-events"},"Handling events"))),(0,l.kt)("br",null),(0,l.kt)("h3",{id:"methods"},(0,l.kt)("inlineCode",{parentName:"h3"},"methods")),(0,l.kt)("p",null,"Declare reusable functions on the component."),(0,l.kt)("h4",{id:"type-7"},"Type"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-ts"},"interface ComponentOptions {\n    methods?: { [key: string]: (...args: any) => any };\n}\n")),(0,l.kt)("h4",{id:"details-7"},"Details"),(0,l.kt)("p",null,"The ",(0,l.kt)("inlineCode",{parentName:"p"},"methods")," option takes an object with each each key representing the name of the property and each value being a function."),(0,l.kt)("p",null,"Each function declared on this property is added to ",(0,l.kt)("inlineCode",{parentName:"p"},"this")," and is automatically bound to the ",(0,l.kt)("a",{parentName:"p",href:"#this"},"internal component instance"),"."),(0,l.kt)("h4",{id:"example-7"},"Example"),(0,l.kt)(o.Z,{mdxType:"Tabs"},(0,l.kt)(r.Z,{value:"js",label:"JavaScript",default:!0,mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-ts"},"const FrozenYogurt = defineComponent({\n    state: {\n        lickCount: {\n            default: 0,\n        },\n    },\n    methods: {\n        lickIceCream() {\n            this.$state.lickCount++;\n        },\n    },\n    hooks: {\n        $setup() {\n            this.lickIceCream();\n        },\n    },\n});\n"))),(0,l.kt)(r.Z,{value:"ts",label:"TypeScript",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-ts"},"const FrozenYogurt = defineComponent<\n    $root: HTMLElement,\n    $state: { lickCount: number },\n    lickIceCream(): void;\n>({\n    state: {\n        lickCount: {\n            default: 0,\n        },\n    },\n    methods: {\n        lickIceCream() {\n            this.$state.lickCount++;\n        },\n    },\n    hooks: {\n        $setup() {\n            this.lickIceCream();\n        },\n    },\n});\n")))),(0,l.kt)("br",null),(0,l.kt)("h3",{id:"components"},(0,l.kt)("inlineCode",{parentName:"h3"},"components")),(0,l.kt)("p",null,"Declare and configure other components that are used by the component."),(0,l.kt)("h4",{id:"type-8"},"Type"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-ts"},"interface ComponentOptions {\n    components?: {\n        [key: string]: (this: ComponentThis) => ComponentOption;\n    };\n}\n\ntype ComponentOption = {\n    constructor: ComponentConstructor;\n    root: Element | string;\n    state?: Record<string, any>;\n    subscribe?: Record<string, (value: any, previousValue: any) => void>;\n};\n")),(0,l.kt)("h4",{id:"details-8"},"Details"),(0,l.kt)("p",null,"The ",(0,l.kt)("inlineCode",{parentName:"p"},"components")," options takes an object with each key representing the name of the property."),(0,l.kt)("p",null,"The value of each property must be function that returns an object with the following options:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},(0,l.kt)("inlineCode",{parentName:"strong"},"constructor")),": Declares the component constructor to be used."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},(0,l.kt)("inlineCode",{parentName:"strong"},"root")),": Declares the root for the component. Must be a valid element or CSS query selector."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},(0,l.kt)("inlineCode",{parentName:"strong"},"state"))," (optional): Defines the state of the component."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},(0,l.kt)("inlineCode",{parentName:"strong"},"subscribe"))," (optional): Subscribes observers to specified state properties.")),(0,l.kt)("h4",{id:"example-8"},"Example"),(0,l.kt)(o.Z,{mdxType:"Tabs"},(0,l.kt)(r.Z,{value:"js",label:"JavaScript",default:!0,mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-ts"},"const Cone = defineComponent({\n    state: {\n        type: {\n            type: String,\n            default: 'sugar',\n        },\n    },\n});\n\nconst FrozenYogurt = defineComponent({\n    state: {\n        coneType: {\n            type: String,\n            default: 'waffle',\n        },\n    },\n    components: {\n        topping: {\n            constructor: Cone,\n            root: document.querySelector('.cone'),\n            state: {\n                cone: this.$state.coneType,\n            },\n            subscribe: {\n                cone: (value) => {\n                    this.$state.coneType = value;\n                },\n            },\n        },\n    },\n});\n"))),(0,l.kt)(r.Z,{value:"ts",label:"TypeScript",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-ts"},"const Cone = defineComponent<\n    $root: HTMLElement,\n    $state: {\n        type: 'sugar' | 'waffle'\n    },\n>({\n    state: {\n        type: {\n            type: String,\n            default: 'sugar'\n        },\n    },\n});\n\nconst FrozenYogurt = defineComponent<\n    $root: HTMLElement,\n    $state: {\n        coneType: 'sugar' | 'waffle'\n    },\n    cone: InstanceType<typeof Cone>\n>({\n    state: {\n        coneType: {\n            type: String,\n            default: 'waffle',\n        },\n    },\n    components: {\n        topping: {\n            constructor: Cone,\n            root: document.querySelector('.cone'),\n            state: {\n                cone: this.$state.coneType,\n            },\n            subscribe: {\n                cone: (value) => {\n                    this.$state.coneType = value;\n                },\n            },\n        },\n    },\n});\n")))),(0,l.kt)("h4",{id:"see-also-2"},"See also:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"/froyo/docs/advanced/subcomponents"},"Subcomponents")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"/froyo/docs/advanced/observer-pattern"},"Observer pattern"))),(0,l.kt)("br",null),(0,l.kt)("h3",{id:"events"},(0,l.kt)("inlineCode",{parentName:"h3"},"events")),(0,l.kt)("p",null,"Declare and attach events to DOM elements related to the component."),(0,l.kt)("h4",{id:"type-9"},"Type"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-ts"},"interface ComponentOptions<T extends ComponentNodes> {\n    events?: {\n        $window: (this: ComponentThis) => EventOption;\n        $document: (this: ComponentThis) => EventOption;\n        $root: (this: ComponentThis) => EventOption;\n    } & {\n        [key: string]: (this: ComponentThis, index?: number) => EventOption;\n    };\n}\n\ntype EventOption = {\n    [key: string]: (event: Event) => void;\n};\n")),(0,l.kt)("h4",{id:"details-9"},"Details"),(0,l.kt)("p",null,"The ",(0,l.kt)("inlineCode",{parentName:"p"},"events")," option takes an object with each key representing the name of the event target."),(0,l.kt)("p",null,"With the exception of ",(0,l.kt)("inlineCode",{parentName:"p"},"$window"),", ",(0,l.kt)("inlineCode",{parentName:"p"},"$document"),", and ",(0,l.kt)("inlineCode",{parentName:"p"},"$root"),", each key must correspond to properties defined in the ",(0,l.kt)("a",{parentName:"p",href:"#nodes"},"nodes")," option."),(0,l.kt)("p",null,"The value of each property must be a function that returns an object of event types and handlers which are assigned directly to the respective target(s)."),(0,l.kt)("p",null,"For properties with an array of elements, the array index is passed as the first argument of the function."),(0,l.kt)("h4",{id:"example-9"},"Example"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-ts"},"const FrozenYogurt = defineComponent({\n    nodes: {\n        element: {\n            type: 'element',\n            tagName: 'button',\n        },\n    },\n    events: {\n        $document() {\n            return {\n                click: (event) => {\n                    // ...\n                },\n            };\n        },\n        button() {\n            return {\n                focus: (event) => {\n                    // ...\n                },\n            };\n        },\n    },\n});\n")),(0,l.kt)("h4",{id:"see-also-3"},"See also:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"/froyo/docs/fundamentals/handling-events"},"Handling events")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"/froyo/docs/fundamentals/dom-management"},"DOM management"))),(0,l.kt)("br",null),(0,l.kt)("h3",{id:"render"},(0,l.kt)("inlineCode",{parentName:"h3"},"render")),(0,l.kt)("h4",{id:"type-10"},"Type"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-ts"},"interface ComponentOptions {\n    render?: {\n        $root: (this: ComponentThis) => RenderOptionElement;\n    } & {\n        [key: string]: (\n            this: ComponentThis,\n            index?: number\n        ) => string | RenderOptionElement;\n    };\n}\n\ntype RenderOptionElement = {\n    attributes?: Record<string, string | boolean | null | undefined>;\n    classes?: Record<string, boolean>;\n    content?: string;\n    style?: Record<string, string | null | undefined>;\n};\n")),(0,l.kt)("h4",{id:"details-10"},"Details"),(0,l.kt)("p",null,"The ",(0,l.kt)("inlineCode",{parentName:"p"},"render")," option takes an object with each key representing the name of the property. The value must be a function that returns value relative to the node type."),(0,l.kt)("p",null,"For ",(0,l.kt)("inlineCode",{parentName:"p"},"Text")," nodes, the function must return a string. This string is applied directly to the node's value."),(0,l.kt)("p",null,"For ",(0,l.kt)("inlineCode",{parentName:"p"},"Element")," nodes, the function can return a string or an object. If a string is returned, it will be applied directly to the element's ",(0,l.kt)("inlineCode",{parentName:"p"},"innerHTML"),". If an object is returned it can have any of the following options:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},(0,l.kt)("inlineCode",{parentName:"strong"},"attributes")),": Defines an object with each key representing the name of the HTML attribute and its value matches one of the following types:",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"string"),": Applies the value directly to the attribute"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"true"),": Adds the attribute to the element"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"false"),", ",(0,l.kt)("inlineCode",{parentName:"li"},"null"),": Removes the attribute from the element"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"undefined"),": Ignores the entry and nothing changes"))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},(0,l.kt)("inlineCode",{parentName:"strong"},"classes")),": Defines an object with each key representing the name of a CSS class name and its value matches one of the following types:",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"true"),": Adds the class name"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"false"),": Removes the class name"))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},(0,l.kt)("inlineCode",{parentName:"strong"},"style"))," (HTML elements only): Defines an object of inline styles to apply to the element. Each key represents the class name to be applied, while the value must be must be one of the following:",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"string"),": Applies the value directly to the property"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"null"),": Removes the property from the element"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"undefined"),": Ignores the entry and nothing changes"))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},(0,l.kt)("inlineCode",{parentName:"strong"},"content")),": Defines the content of the element. The value must be a ",(0,l.kt)("inlineCode",{parentName:"li"},"string")," that is used to set the inner HTML of the element.")),(0,l.kt)("p",null,"The ",(0,l.kt)("inlineCode",{parentName:"p"},"$root")," property is reserved and should be used to render the root element. All other keys must correspond to properties defined in ",(0,l.kt)("a",{parentName:"p",href:"#nodes"},"nodes"),"."),(0,l.kt)("p",null,"For properties which are an array of elements, the data will be applied directly to every element. Additionally, the index of the element is passed as the first argument of the function."),(0,l.kt)("h4",{id:"example-10"},"Example"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-ts"},"defineComponent({\n    nodes: {\n        contentOnly: {\n            type: 'element',\n            tagName: 'span',\n        },\n        optionsObject: {\n            type: 'element',\n            tagName: 'svg',\n        },\n    },\n    render: {\n        contentOnly() {\n            return '...'; // applies to innerHTML\n        },\n        optionsObject() {\n            return {\n                attributes: {\n                    '<attribute-name>': '...', // sets the value\n                    '<attribute-name>': true, // adds boolean attribute\n                    '<attribute-name>': false, // removes boolean attribute\n                    '<attribute-name>': null, // removes the attribute\n                    '<attribute-name>': undefined, // ignores the update\n                },\n                classes: {\n                    '<class-name>': true, // adds class\n                    '<class-name>': false, // removes class\n                },\n                style: {\n                    '<property-name>': '...', // sets the value\n                    '<property-name>': null, // removes the property\n                    '<property-name>': undefined, // ignores the update\n                },\n                content: '...', // applies to innerHTML\n            };\n        },\n    },\n});\n")),(0,l.kt)("h4",{id:"see-also-4"},"See also:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"/froyo/docs/fundamentals/dom-management"},"DOM management"))),(0,l.kt)("br",null),(0,l.kt)("h3",{id:"hooks"},(0,l.kt)("inlineCode",{parentName:"h3"},"hooks")),(0,l.kt)("p",null,"Define functions that hook into component lifecycle events and react to state changes."),(0,l.kt)("h4",{id:"type-11"},"Type"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-ts"},"interface ComponentOptions {\n    hooks?: {\n        $setup: (this: ComponentThis) => void;\n        $teardown: (this: ComponentThis) => void;\n    } & {\n        [key: string]: (\n            this: ComponentThis,\n            value: any,\n            previousValue: any\n        ) => void;\n    };\n}\n\ntype ComponentThis = ComponentState & ComponentNodes & ComponentData;\n")),(0,l.kt)("h4",{id:"details-11"},"Details"),(0,l.kt)("p",null,"The ",(0,l.kt)("inlineCode",{parentName:"p"},"hooks")," option takes an object with each key representing the name of the hook and each value is a function."),(0,l.kt)("p",null,"A handful of properties have reserved names and are called at specific times during the component lifecycle;"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},(0,l.kt)("inlineCode",{parentName:"strong"},"$setup")),": called once when the component initializes"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},(0,l.kt)("inlineCode",{parentName:"strong"},"$teardown")),": called once when the component is destroyed")),(0,l.kt)("p",null,"All other keys must correspond to properties defined in ",(0,l.kt)("a",{parentName:"p",href:"#state"},"state"),". These functions are called when the value of that state has changed. The current and previous value are passed to the function as the first and second argument respectively."),(0,l.kt)("h4",{id:"example-11"},"Example"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-js"},"const FrozenYogurt = defineComponent({\n    state: {\n        flavor: {\n            type: String,\n            default: 'vanilla',\n        },\n    },\n    hooks: {\n        $setup() {\n            // Perform setup tasks ...\n        },\n        $teardown() {\n            // Perform cleanup tasks ...\n        },\n        flavor(value, previousValue) {\n            // The value of \"flavor\" changed, do something ...\n        },\n    },\n});\n")),(0,l.kt)("h4",{id:"see-also-5"},"See also:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"/froyo/docs/fundamentals/component-lifecycle"},"Component lifecycle"))),(0,l.kt)("br",null),(0,l.kt)("h2",{id:"component-instance"},"Component Instance"),(0,l.kt)("h3",{id:"state-1"},(0,l.kt)("inlineCode",{parentName:"h3"},"state")),(0,l.kt)("p",null,"Retrieve the current state of the component."),(0,l.kt)("h4",{id:"type-12"},"Type"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-ts"},"export interface ComponentInstance {\n    get state(): Record<string, any>;\n}\n")),(0,l.kt)("h4",{id:"details-12"},"Details"),(0,l.kt)("p",null,"This property returns a readonly copy of the current state of the component instance."),(0,l.kt)("h4",{id:"example-12"},"Example"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-ts"},"const instance = new FrozenYogurt('#root');\n\nconsole.log(instance.state); // { flavor: 'vanilla', ... }\n")),(0,l.kt)("br",null),(0,l.kt)("h3",{id:"root"},(0,l.kt)("inlineCode",{parentName:"h3"},"root")),(0,l.kt)("p",null,"Retrieve the root element."),(0,l.kt)("h4",{id:"type-13"},"Type"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-ts"},"export interface ComponentInstance {\n    get root(): Element;\n}\n")),(0,l.kt)("h4",{id:"details-13"},"Details"),(0,l.kt)("p",null,"This property returns a reference to the root element."),(0,l.kt)("h4",{id:"example-13"},"Example"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-ts"},"const instance = new FrozenYogurt('#root');\n\nconsole.log(instance.root); // Element\n")),(0,l.kt)("br",null),(0,l.kt)("h3",{id:"setstate"},(0,l.kt)("inlineCode",{parentName:"h3"},"setState")),(0,l.kt)("p",null,"Imperatively set the internal state of the component instance."),(0,l.kt)("h4",{id:"type-14"},"Type"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-ts"},"interface ComponentInstance {\n    setState(stateChanges: Record<string, any>): void;\n}\n")),(0,l.kt)("h4",{id:"details-14"},"Details"),(0,l.kt)("p",null,"This method updates the state of the component instance. The one required argument must be an object that represents the state properties to be set. Each key must match a property name from the component's state definition."),(0,l.kt)("p",null,'If a particular state property is configured to be "readonly", any attempt to update it via this method will be ignored and a warning will be thrown.'),(0,l.kt)("h4",{id:"example-14"},"Example"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-ts"},"const instance = new FrozenYogurt('#root');\n\ninstance.setState({ flavor: 'chocolate' });\n")),(0,l.kt)("h4",{id:"see-also-6"},"See also:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"/froyo/docs/fundamentals/component-lifecycle"},"Component lifecycle"))),(0,l.kt)("br",null),(0,l.kt)("h3",{id:"subscribe"},(0,l.kt)("inlineCode",{parentName:"h3"},"subscribe")),(0,l.kt)("p",null,"Bind a callback function to the changes of a specified state property."),(0,l.kt)("h4",{id:"type-15"},"Type"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-ts"},"interface ComponentInstance {\n    subscribe(\n        property: string,\n        observer: (value: any, previousValue: any) => void\n    ): void;\n}\n")),(0,l.kt)("h4",{id:"see-also-7"},"See also:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"/froyo/docs/advanced/observer-pattern"},"Observer pattern"))),(0,l.kt)("h4",{id:"details-15"},"Details"),(0,l.kt)("p",null,"This method will bind the given observer function to a given state property. When the value of that property is changed, this function will be called with the current and previous value as the first and second argument respectively."),(0,l.kt)("h4",{id:"example-15"},"Example"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-ts"},"const instance = new FrozenYogurt('#root');\n\nconst observeFlavorChange = (value: string) => {\n    // \"flavor\" changed, do something ...\n};\n\ninstance.subscribe('flavor', observeFlavorChange);\n")),(0,l.kt)("br",null),(0,l.kt)("h3",{id:"unsubscribe"},(0,l.kt)("inlineCode",{parentName:"h3"},"unsubscribe")),(0,l.kt)("p",null,"Unbind a callback function from a specified state property."),(0,l.kt)("h4",{id:"type-16"},"Type"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-ts"},"interface ComponentInstance {\n    unsubscribe(\n        property: string,\n        observer: (value: any, previousValue: any) => void\n    ): void;\n}\n")),(0,l.kt)("h4",{id:"details-16"},"Details"),(0,l.kt)("p",null,"This method will unbind an observer function that was previously bound to a particular state property."),(0,l.kt)("h4",{id:"example-16"},"Example"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-ts"},"const instance = new FrozenYogurt('#root');\n\nconst observeFlavorChange = (value: string, previousValue: string) => {\n    // \"flavor\" changed, do something ...\n};\n\ninstance.unsubscribe('flavor', observeFlavorChange);\n")),(0,l.kt)("br",null),(0,l.kt)("h3",{id:"destroy"},(0,l.kt)("inlineCode",{parentName:"h3"},"destroy")),(0,l.kt)("p",null,"Imperatively destroy the component instance."),(0,l.kt)("h4",{id:"type-17"},"Type"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-ts"},"interface ComponentInstance {\n    destroy(): void;\n}\n")),(0,l.kt)("h4",{id:"details-17"},"Details"),(0,l.kt)("p",null,'When called, this method will immediately "destroy" the component instance by removing all event listeners, clearing all observers, and firing all end-of-lifecycle hooks.'),(0,l.kt)("h4",{id:"example-17"},"Example"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-ts"},"const instance = new FrozenYogurt('#root');\n\ninstance.destroy();\n")))}c.isMDXComponent=!0}}]);