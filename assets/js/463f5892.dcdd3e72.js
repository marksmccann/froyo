"use strict";(self.webpackChunkfroyo=self.webpackChunkfroyo||[]).push([[2367],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>m});var o=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,o,a=function(e,t){if(null==e)return{};var n,o,a={},r=Object.keys(e);for(o=0;o<r.length;o++)n=r[o],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(o=0;o<r.length;o++)n=r[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=o.createContext({}),c=function(e){var t=o.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},u=function(e){var t=c(e.components);return o.createElement(s.Provider,{value:t},e.children)},d="mdxType",p={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},h=o.forwardRef((function(e,t){var n=e.components,a=e.mdxType,r=e.originalType,s=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),d=c(n),h=a,m=d["".concat(s,".").concat(h)]||d[h]||p[h]||r;return n?o.createElement(m,l(l({ref:t},u),{},{components:n})):o.createElement(m,l({ref:t},u))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var r=n.length,l=new Array(r);l[0]=h;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i[d]="string"==typeof e?e:a,l[1]=i;for(var c=2;c<r;c++)l[c]=n[c];return o.createElement.apply(null,l)}return o.createElement.apply(null,n)}h.displayName="MDXCreateElement"},5162:(e,t,n)=>{n.d(t,{Z:()=>l});var o=n(7294),a=n(6010);const r="tabItem_Ymn6";function l(e){let{children:t,hidden:n,className:l}=e;return o.createElement("div",{role:"tabpanel",className:(0,a.Z)(r,l),hidden:n},t)}},4866:(e,t,n)=>{n.d(t,{Z:()=>N});var o=n(7462),a=n(7294),r=n(6010),l=n(2466),i=n(6550),s=n(1980),c=n(7392),u=n(12);function d(e){return function(e){return a.Children.map(e,(e=>{if(!e||(0,a.isValidElement)(e)&&function(e){const{props:t}=e;return!!t&&"object"==typeof t&&"value"in t}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}(e).map((e=>{let{props:{value:t,label:n,attributes:o,default:a}}=e;return{value:t,label:n,attributes:o,default:a}}))}function p(e){const{values:t,children:n}=e;return(0,a.useMemo)((()=>{const e=t??d(n);return function(e){const t=(0,c.l)(e,((e,t)=>e.value===t.value));if(t.length>0)throw new Error(`Docusaurus error: Duplicate values "${t.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[t,n])}function h(e){let{value:t,tabValues:n}=e;return n.some((e=>e.value===t))}function m(e){let{queryString:t=!1,groupId:n}=e;const o=(0,i.k6)(),r=function(e){let{queryString:t=!1,groupId:n}=e;if("string"==typeof t)return t;if(!1===t)return null;if(!0===t&&!n)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return n??null}({queryString:t,groupId:n});return[(0,s._X)(r),(0,a.useCallback)((e=>{if(!r)return;const t=new URLSearchParams(o.location.search);t.set(r,e),o.replace({...o.location,search:t.toString()})}),[r,o])]}function g(e){const{defaultValue:t,queryString:n=!1,groupId:o}=e,r=p(e),[l,i]=(0,a.useState)((()=>function(e){let{defaultValue:t,tabValues:n}=e;if(0===n.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(t){if(!h({value:t,tabValues:n}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${t}" but none of its children has the corresponding value. Available values are: ${n.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return t}const o=n.find((e=>e.default))??n[0];if(!o)throw new Error("Unexpected error: 0 tabValues");return o.value}({defaultValue:t,tabValues:r}))),[s,c]=m({queryString:n,groupId:o}),[d,g]=function(e){let{groupId:t}=e;const n=function(e){return e?`docusaurus.tab.${e}`:null}(t),[o,r]=(0,u.Nk)(n);return[o,(0,a.useCallback)((e=>{n&&r.set(e)}),[n,r])]}({groupId:o}),f=(()=>{const e=s??d;return h({value:e,tabValues:r})?e:null})();(0,a.useLayoutEffect)((()=>{f&&i(f)}),[f]);return{selectedValue:l,selectValue:(0,a.useCallback)((e=>{if(!h({value:e,tabValues:r}))throw new Error(`Can't select invalid tab value=${e}`);i(e),c(e),g(e)}),[c,g,r]),tabValues:r}}var f=n(2389);const v="tabList__CuJ",y="tabItem_LNqP";function k(e){let{className:t,block:n,selectedValue:i,selectValue:s,tabValues:c}=e;const u=[],{blockElementScrollPositionUntilNextRender:d}=(0,l.o5)(),p=e=>{const t=e.currentTarget,n=u.indexOf(t),o=c[n].value;o!==i&&(d(t),s(o))},h=e=>{let t=null;switch(e.key){case"Enter":p(e);break;case"ArrowRight":{const n=u.indexOf(e.currentTarget)+1;t=u[n]??u[0];break}case"ArrowLeft":{const n=u.indexOf(e.currentTarget)-1;t=u[n]??u[u.length-1];break}}t?.focus()};return a.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,r.Z)("tabs",{"tabs--block":n},t)},c.map((e=>{let{value:t,label:n,attributes:l}=e;return a.createElement("li",(0,o.Z)({role:"tab",tabIndex:i===t?0:-1,"aria-selected":i===t,key:t,ref:e=>u.push(e),onKeyDown:h,onClick:p},l,{className:(0,r.Z)("tabs__item",y,l?.className,{"tabs__item--active":i===t})}),n??t)})))}function b(e){let{lazy:t,children:n,selectedValue:o}=e;const r=(Array.isArray(n)?n:[n]).filter(Boolean);if(t){const e=r.find((e=>e.props.value===o));return e?(0,a.cloneElement)(e,{className:"margin-top--md"}):null}return a.createElement("div",{className:"margin-top--md"},r.map(((e,t)=>(0,a.cloneElement)(e,{key:t,hidden:e.props.value!==o}))))}function w(e){const t=g(e);return a.createElement("div",{className:(0,r.Z)("tabs-container",v)},a.createElement(k,(0,o.Z)({},e,t)),a.createElement(b,(0,o.Z)({},e,t)))}function N(e){const t=(0,f.Z)();return a.createElement(w,(0,o.Z)({key:String(t)},e))}},6972:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>l,default:()=>d,frontMatter:()=>r,metadata:()=>i,toc:()=>c});var o=n(7462),a=(n(7294),n(3905));n(4866),n(5162);const r={},l="Creating a Component",i={unversionedId:"getting-started/creating-a-component",id:"getting-started/creating-a-component",title:"Creating a Component",description:"In this brief tutorial you will learn how to build a simple component.",source:"@site/docs/getting-started/creating-a-component.md",sourceDirName:"getting-started",slug:"/getting-started/creating-a-component",permalink:"/froyo/docs/getting-started/creating-a-component",draft:!1,editUrl:"https://github.com/marksmccann/froyo/docs/getting-started/creating-a-component.md",tags:[],version:"current",frontMatter:{},sidebar:"docs",previous:{title:"Installation",permalink:"/froyo/docs/getting-started/installation"},next:{title:"Component Example",permalink:"/froyo/docs/getting-started/component-example"}},s={},c=[{value:"1. Setup",id:"1-setup",level:2},{value:"Create page from template",id:"create-page-from-template",level:3},{value:"Add the root element",id:"add-the-root-element",level:3},{value:"Import Froyo from CDN",id:"import-froyo-from-cdn",level:3},{value:"Add script tag",id:"add-script-tag",level:3},{value:"2. Creating the Component",id:"2-creating-the-component",level:2},{value:"Define a new component",id:"define-a-new-component",level:3},{value:"Initialize the component",id:"initialize-the-component",level:3},{value:"Render something",id:"render-something",level:3},{value:"Declare the component state",id:"declare-the-component-state",level:3},{value:"Render something with state",id:"render-something-with-state",level:3},{value:"3. Adding Functionality",id:"3-adding-functionality",level:2},{value:"Update the initial HTML",id:"update-the-initial-html",level:3},{value:"Declare DOM nodes",id:"declare-dom-nodes",level:3},{value:"Rendering the flavor",id:"rendering-the-flavor",level:3},{value:"Add the event listener",id:"add-the-event-listener",level:3},{value:"Update the state",id:"update-the-state",level:3},{value:"Put it all together",id:"put-it-all-together",level:3},{value:"4. Conclusion",id:"4-conclusion",level:2}],u={toc:c};function d(e){let{components:t,...n}=e;return(0,a.kt)("wrapper",(0,o.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"creating-a-component"},"Creating a Component"),(0,a.kt)("p",null,"In this brief tutorial you will learn how to build a simple component."),(0,a.kt)("admonition",{type:"info"},(0,a.kt)("p",{parentName:"admonition"},"This tutorial assumes readers have a working knowledge of JavaScript and fundamental software development concepts. If this does not describe you, consider taking a moment to review a ",(0,a.kt)("a",{parentName:"p",href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Language_Overview"},"JavaScript tutorial")," before continuing.")),(0,a.kt)("h2",{id:"1-setup"},"1. Setup"),(0,a.kt)("p",null,"Goal: Create a boilerplate page and open it in a browser."),(0,a.kt)("h3",{id:"create-page-from-template"},"Create page from template"),(0,a.kt)("p",null,"Let's begin with a basic HTML 5 template; copy it to a HTML file and open it in a browser."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-html"},'<!DOCTYPE html>\n<html lang="en">\n    <head>\n        <meta charset="utf-8" />\n        <title>Froyo Component Example</title>\n    </head>\n    <body>\n        \x3c!-- content goes here --\x3e\n    </body>\n</html>\n')),(0,a.kt)("h3",{id:"add-the-root-element"},"Add the root element"),(0,a.kt)("p",null,"Add an element to the body content which will serve as the component's root element."),(0,a.kt)("admonition",{type:"info"},(0,a.kt)("p",{parentName:"admonition"},"Every Froyo component is required to have a root element. The root element can be any element type and it is typically attached to the DOM.")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-html"},'<body>\n    <div id="root"></div>\n</body>\n')),(0,a.kt)("h3",{id:"import-froyo-from-cdn"},"Import Froyo from CDN"),(0,a.kt)("p",null,"Add the following script to the bottom of the document to import the latest development version of Froyo."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-html"},'<body>\n    ...\n    \x3c!-- highlight-start --\x3e\n    <script src="https://cdn.jsdelivr.net/gh/marksmccann/froyo@latest/packages/froyojs/bundles/froyojs.js"><\/script>\n    \x3c!-- highlight-end --\x3e\n</body>\n')),(0,a.kt)("h3",{id:"add-script-tag"},"Add script tag"),(0,a.kt)("p",null,"Lastly, add an empty script tag to the bottom of the document. This is where we will be working."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-html"},"<body>\n    ...\n    <script>\n        /* scripts will go here */\n    <\/script>\n</body>\n")),(0,a.kt)("h2",{id:"2-creating-the-component"},"2. Creating the Component"),(0,a.kt)("p",null,"Goal: Learn how to define a component and get it to render some content."),(0,a.kt)("h3",{id:"define-a-new-component"},"Define a new component"),(0,a.kt)("p",null,"Define a new component by calling the ",(0,a.kt)("inlineCode",{parentName:"p"},"defineComponent")," function. This will return a constructor for our component."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-html"},"<script>\n    const FrozenYogurt = froyojs.defineComponent({});\n<\/script>\n")),(0,a.kt)("h3",{id:"initialize-the-component"},"Initialize the component"),(0,a.kt)("p",null,"Now that we've defined a component, let's initialize it with the root element."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-html"},"<script>\n    const FrozenYogurt = froyojs.defineComponent({});\n\n    /* highlight-start */\n    const instance = new FrozenYogurt(document.getElementById('root'));\n    /* highlight-end */\n<\/script>\n")),(0,a.kt)("p",null,"The first argument of the constructor alternatively supports a raw query selector. Let's shorten the statement to this:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"const instance = new FrozenYogurt('#root');\n")),(0,a.kt)("h3",{id:"render-something"},"Render something"),(0,a.kt)("p",null,"We defined a component, but it doesn't do anything yet. Let's make the component render something in the root element. We do this by adding a method named ",(0,a.kt)("inlineCode",{parentName:"p"},"$root")," to the ",(0,a.kt)("a",{parentName:"p",href:"/froyo/docs/api/define-component#render"},"render option"),". By returning a string we can render text within the content of the element."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"const FrozenYogurt = froyojs.defineComponent({\n    /* highlight-start */\n    render: {\n        $root() {\n            return 'The best flavor is: Vanilla';\n        },\n    },\n    /* highlight-end */\n});\n")),(0,a.kt)("p",null,"After initializing, the root element should look like this:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-html"},'<div id="root">The best flavor is: Vanilla</div>\n')),(0,a.kt)("h3",{id:"declare-the-component-state"},"Declare the component state"),(0,a.kt)("p",null,"Next, let's make the content dynamic. We do this by binding the content of the root element to the component's state. Declare a new state property by adding an entry to the ",(0,a.kt)("a",{parentName:"p",href:"/froyo/docs/api/define-component#state"},"state option")," called ",(0,a.kt)("inlineCode",{parentName:"p"},"flavor"),' and set its default value to "Vanilla".'),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"const FrozenYogurt = froyojs.defineComponent({\n    /* highlight-start */\n    state: {\n        flavor: {\n            default: 'Vanilla',\n        },\n    },\n    /* highlight-end */\n});\n")),(0,a.kt)("h3",{id:"render-something-with-state"},"Render something with state"),(0,a.kt)("p",null,'Now, let\'s apply the newly defined state to the root element. Replace "Vanilla" with ',(0,a.kt)("inlineCode",{parentName:"p"},"this.$state.flavor")," to make the message dynamic."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"$root() {\n    // highlight-next-line\n    return `The best flavor is: ${this.$state.flavor}.`;\n}\n")),(0,a.kt)("p",null,"Now that the content of the root element is bound to the state, we can control it. To test this, pass an object as the second argument of the constructor and set the initial value of ",(0,a.kt)("inlineCode",{parentName:"p"},"flavor"),' to "Chocolate".'),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"const instance = new FrozenYogurt('#root', { flavor: 'Chocolate' });\n")),(0,a.kt)("p",null,"As a result, the rendered output should now be:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-html"},'<div id="root">The best flavor is: Chocolate</div>\n')),(0,a.kt)("h2",{id:"3-adding-functionality"},"3. Adding Functionality"),(0,a.kt)("p",null,"Goal: Learn how make the component functional."),(0,a.kt)("h3",{id:"update-the-initial-html"},"Update the initial HTML"),(0,a.kt)("p",null,"Let's start by adding some content to the root element to work with."),(0,a.kt)("admonition",{type:"info"},(0,a.kt)("p",{parentName:"admonition"},"While this content could easily be generated with JavaScript, it is a good practice for static content to be included manually in the HTML. This gives consumers the ability to customize the content and it will reduce the effects of ",(0,a.kt)("a",{parentName:"p",href:"https://web.dev/cls/"},"cumulative layout shift")," which can have a degrading impact in SEO evaluations.")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-html"},'<div id="root">\n    \x3c!-- highlight-start --\x3e\n    <button>Toggle</button><br />\n    The best flavor is: <span class="text">Vanilla<span>.\n    \x3c!-- highlight-end --\x3e\n</div>\n')),(0,a.kt)("h3",{id:"declare-dom-nodes"},"Declare DOM nodes"),(0,a.kt)("p",null,"To access these newly defined elements in our component, add two entries to the ",(0,a.kt)("a",{parentName:"p",href:"/froyo/docs/api/define-component#nodes"},"nodes option"),". Set the ",(0,a.kt)("inlineCode",{parentName:"p"},"type"),' of each node to "query" and provide a ',(0,a.kt)("inlineCode",{parentName:"p"},"selector"),"; this tells the component to search for a match within the root element and save it to the instance."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"const FrozenYogurt = froyojs.defineComponent({\n    /* highlight-start */\n    nodes: {\n        button: {\n            type: 'query',\n            selector: 'button',\n        },\n        text: {\n            type: 'query',\n            selector: '.text',\n        },\n    },\n    /* highlight-end */\n});\n")),(0,a.kt)("h3",{id:"rendering-the-flavor"},"Rendering the flavor"),(0,a.kt)("p",null,"Next, remove the ",(0,a.kt)("inlineCode",{parentName:"p"},"$root")," entry from ",(0,a.kt)("inlineCode",{parentName:"p"},"render")," so that we do not overwrite our new content. Replace it with an entry for our new ",(0,a.kt)("inlineCode",{parentName:"p"},"text")," node (every property declared in ",(0,a.kt)("inlineCode",{parentName:"p"},"nodes")," can have a corresponding entry in ",(0,a.kt)("inlineCode",{parentName:"p"},"render"),"). Return ",(0,a.kt)("inlineCode",{parentName:"p"},"this.$state.flavor")," from the function to apply the value to its content."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"const FrozenYogurt = froyojs.defineComponent({\n    /* highlight-start */\n    render: {\n        text() {\n            return this.$state.flavor;\n        },\n    },\n    /* highlight-end */\n});\n")),(0,a.kt)("h3",{id:"add-the-event-listener"},"Add the event listener"),(0,a.kt)("p",null,"Now, let's add an event listener to the button element. Just like ",(0,a.kt)("inlineCode",{parentName:"p"},"render"),", every property declared in ",(0,a.kt)("inlineCode",{parentName:"p"},"nodes")," can have a corresponding entry in the ",(0,a.kt)("a",{parentName:"p",href:"/froyo/docs/api/define-component#events"},"events option"),". Define the event listener by adding an entry to ",(0,a.kt)("inlineCode",{parentName:"p"},"events"),' called "button". This property must be a function that returns an object of events. Add a "click" property to this object with an empty function as its value.'),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"const FrozenYogurt = froyojs.defineComponent({\n    /* highlight-start */\n    events: {\n        button() {\n            return {\n                click: () => {},\n            };\n        },\n    },\n    /* highlight-end */\n});\n")),(0,a.kt)("h3",{id:"update-the-state"},"Update the state"),(0,a.kt)("p",null,"To make the component functional, we need to update the state when the button is clicked. In this case, we want to toggle the value of ",(0,a.kt)("inlineCode",{parentName:"p"},"flavor"),' between "Vanilla" and "Chocolate". We can do this by setting ',(0,a.kt)("inlineCode",{parentName:"p"},"this.$state.flavor")," directly."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"button() {\n    return {\n        click: () => {\n            this.$state.flavor = this.$state.flavor === 'Vanilla' ? 'Chocolate' : 'Vanilla';\n        },\n    };\n},\n")),(0,a.kt)("h3",{id:"put-it-all-together"},"Put it all together"),(0,a.kt)("p",null,"At this point, the component should be fully functional. The component should look like the following and the flavor should toggle when the button is pressed."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"const FrozenYogurt = froyojs.defineComponent({\n    state: {\n        flavor: {\n            default: 'Vanilla',\n        },\n    },\n    nodes: {\n        button: {\n            type: 'query',\n            selector: 'button',\n        },\n        text: {\n            type: 'query',\n            selector: '.text',\n        },\n    },\n    events: {\n        button() {\n            return {\n                click: () => {\n                    this.$state.flavor = this.$state.flavor === 'Vanilla' ? 'Chocolate' : 'Vanilla';\n                },\n            };\n        },\n    },\n    render: {\n        text() {\n            return this.$state.flavor;\n        },\n    },\n});\n")),(0,a.kt)("h2",{id:"4-conclusion"},"4. Conclusion"),(0,a.kt)("p",null,"Goal: Start building your own components!"),(0,a.kt)("p",null,"You have now created a functional component with Froyo. The fundamental concepts you have learned are universally applicable and can scale to support very complex components. You can start building your own. However, there is more to learn. We encourage working your way through the following guides to learn more."))}d.isMDXComponent=!0}}]);