"use strict";(self.webpackChunkfroyo=self.webpackChunkfroyo||[]).push([[8165],{3905:(e,t,n)=>{n.d(t,{Zo:()=>l,kt:()=>f});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function c(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var p=r.createContext({}),s=function(e){var t=r.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):c(c({},t),e)),n},l=function(e){var t=s(e.components);return r.createElement(p.Provider,{value:t},e.children)},d="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},y=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,p=e.parentName,l=i(e,["components","mdxType","originalType","parentName"]),d=s(n),y=o,f=d["".concat(p,".").concat(y)]||d[y]||u[y]||a;return n?r.createElement(f,c(c({ref:t},l),{},{components:n})):r.createElement(f,c({ref:t},l))}));function f(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,c=new Array(a);c[0]=y;var i={};for(var p in t)hasOwnProperty.call(t,p)&&(i[p]=t[p]);i.originalType=e,i[d]="string"==typeof e?e:o,c[1]=i;for(var s=2;s<a;s++)c[s]=n[s];return r.createElement.apply(null,c)}return r.createElement.apply(null,n)}y.displayName="MDXCreateElement"},1627:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>c,default:()=>d,frontMatter:()=>a,metadata:()=>i,toc:()=>s});var r=n(7462),o=(n(7294),n(3905));const a={},c="Typechecking State",i={unversionedId:"advanced/typechecking-state",id:"advanced/typechecking-state",title:"Typechecking State",description:"This guide explains how to add runtime type-checking to component state.",source:"@site/docs/advanced/typechecking-state.md",sourceDirName:"advanced",slug:"/advanced/typechecking-state",permalink:"/froyo/docs/advanced/typechecking-state",draft:!1,editUrl:"https://github.com/marksmccann/froyo/docs/advanced/typechecking-state.md",tags:[],version:"current",frontMatter:{},sidebar:"docs",previous:{title:"HTML-only Usage",permalink:"/froyo/docs/fundamentals/html-only-usage"},next:{title:"Component Validation",permalink:"/froyo/docs/advanced/component-validation"}},p={},s=[{value:"Introduction",id:"introduction",level:2},{value:"Adding Typechecking",id:"adding-typechecking",level:2}],l={toc:s};function d(e){let{components:t,...n}=e;return(0,o.kt)("wrapper",(0,r.Z)({},l,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"typechecking-state"},"Typechecking State"),(0,o.kt)("p",null,"This guide explains how to add runtime type-checking to component state."),(0,o.kt)("h2",{id:"introduction"},"Introduction"),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"https://www.geeksforgeeks.org/type-checking-in-compiler-design/"},"Type checking")," is the process of verifying and enforcing constraints of types in values. It can be very helpful for catching bugs during the development process. If you have done ",(0,o.kt)("a",{parentName:"p",href:"https://reactjs.org/docs/typechecking-with-proptypes.html#gatsby-focus-wrapper"},"typechecking in React"),", this is likely a familiar concept. In fact, Froyo leverages the same ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/facebook/prop-types"},"prop-types")," library as React."),(0,o.kt)("br",null),(0,o.kt)("hr",null),(0,o.kt)("h2",{id:"adding-typechecking"},"Adding Typechecking"),(0,o.kt)("p",null,"To add runtime typechecking to a component, add the ",(0,o.kt)("a",{parentName:"p",href:"/froyo/docs/api/component#statetypes"},(0,o.kt)("inlineCode",{parentName:"a"},"stateTypes"))," property to the class definition. When this property exists, the component will automatically type-check the state in non-production environments. View the ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/facebook/prop-types"},"prop-types")," documentation for a full list of available validators."),(0,o.kt)("admonition",{type:"info"},(0,o.kt)("p",{parentName:"admonition"},"The property should be defined with a ",(0,o.kt)("a",{parentName:"p",href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Functions/get"},"getter")," so that it is read-only and cannot be updated accidentally.")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},"import PropTypes from 'prop-types';\n\nclass FrozenYogurt extends Component {\n    static get stateTypes() {\n        return {\n            flavor: PropTypes.string,\n        };\n    }\n}\n")))}d.isMDXComponent=!0}}]);