"use strict";(self.webpackChunkfroyo=self.webpackChunkfroyo||[]).push([[4085],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>m});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},l=Object.keys(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=a.createContext({}),u=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},c=function(e){var t=u(e.components);return a.createElement(s.Provider,{value:t},e.children)},p="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},b=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,l=e.originalType,s=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),p=u(n),b=r,m=p["".concat(s,".").concat(b)]||p[b]||d[b]||l;return n?a.createElement(m,o(o({ref:t},c),{},{components:n})):a.createElement(m,o({ref:t},c))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var l=n.length,o=new Array(l);o[0]=b;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i[p]="string"==typeof e?e:r,o[1]=i;for(var u=2;u<l;u++)o[u]=n[u];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}b.displayName="MDXCreateElement"},5162:(e,t,n)=>{n.d(t,{Z:()=>o});var a=n(7294),r=n(6010);const l="tabItem_Ymn6";function o(e){let{children:t,hidden:n,className:o}=e;return a.createElement("div",{role:"tabpanel",className:(0,r.Z)(l,o),hidden:n},t)}},4866:(e,t,n)=>{n.d(t,{Z:()=>_});var a=n(7462),r=n(7294),l=n(6010),o=n(2466),i=n(6550),s=n(1980),u=n(7392),c=n(12);function p(e){return function(e){return r.Children.map(e,(e=>{if(!e||(0,r.isValidElement)(e)&&function(e){const{props:t}=e;return!!t&&"object"==typeof t&&"value"in t}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}(e).map((e=>{let{props:{value:t,label:n,attributes:a,default:r}}=e;return{value:t,label:n,attributes:a,default:r}}))}function d(e){const{values:t,children:n}=e;return(0,r.useMemo)((()=>{const e=t??p(n);return function(e){const t=(0,u.l)(e,((e,t)=>e.value===t.value));if(t.length>0)throw new Error(`Docusaurus error: Duplicate values "${t.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[t,n])}function b(e){let{value:t,tabValues:n}=e;return n.some((e=>e.value===t))}function m(e){let{queryString:t=!1,groupId:n}=e;const a=(0,i.k6)(),l=function(e){let{queryString:t=!1,groupId:n}=e;if("string"==typeof t)return t;if(!1===t)return null;if(!0===t&&!n)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return n??null}({queryString:t,groupId:n});return[(0,s._X)(l),(0,r.useCallback)((e=>{if(!l)return;const t=new URLSearchParams(a.location.search);t.set(l,e),a.replace({...a.location,search:t.toString()})}),[l,a])]}function f(e){const{defaultValue:t,queryString:n=!1,groupId:a}=e,l=d(e),[o,i]=(0,r.useState)((()=>function(e){let{defaultValue:t,tabValues:n}=e;if(0===n.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(t){if(!b({value:t,tabValues:n}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${t}" but none of its children has the corresponding value. Available values are: ${n.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return t}const a=n.find((e=>e.default))??n[0];if(!a)throw new Error("Unexpected error: 0 tabValues");return a.value}({defaultValue:t,tabValues:l}))),[s,u]=m({queryString:n,groupId:a}),[p,f]=function(e){let{groupId:t}=e;const n=function(e){return e?`docusaurus.tab.${e}`:null}(t),[a,l]=(0,c.Nk)(n);return[a,(0,r.useCallback)((e=>{n&&l.set(e)}),[n,l])]}({groupId:a}),v=(()=>{const e=s??p;return b({value:e,tabValues:l})?e:null})();(0,r.useLayoutEffect)((()=>{v&&i(v)}),[v]);return{selectedValue:o,selectValue:(0,r.useCallback)((e=>{if(!b({value:e,tabValues:l}))throw new Error(`Can't select invalid tab value=${e}`);i(e),u(e),f(e)}),[u,f,l]),tabValues:l}}var v=n(2389);const y="tabList__CuJ",h="tabItem_LNqP";function g(e){let{className:t,block:n,selectedValue:i,selectValue:s,tabValues:u}=e;const c=[],{blockElementScrollPositionUntilNextRender:p}=(0,o.o5)(),d=e=>{const t=e.currentTarget,n=c.indexOf(t),a=u[n].value;a!==i&&(p(t),s(a))},b=e=>{let t=null;switch(e.key){case"Enter":d(e);break;case"ArrowRight":{const n=c.indexOf(e.currentTarget)+1;t=c[n]??c[0];break}case"ArrowLeft":{const n=c.indexOf(e.currentTarget)-1;t=c[n]??c[c.length-1];break}}t?.focus()};return r.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,l.Z)("tabs",{"tabs--block":n},t)},u.map((e=>{let{value:t,label:n,attributes:o}=e;return r.createElement("li",(0,a.Z)({role:"tab",tabIndex:i===t?0:-1,"aria-selected":i===t,key:t,ref:e=>c.push(e),onKeyDown:b,onClick:d},o,{className:(0,l.Z)("tabs__item",h,o?.className,{"tabs__item--active":i===t})}),n??t)})))}function T(e){let{lazy:t,children:n,selectedValue:a}=e;const l=(Array.isArray(n)?n:[n]).filter(Boolean);if(t){const e=l.find((e=>e.props.value===a));return e?(0,r.cloneElement)(e,{className:"margin-top--md"}):null}return r.createElement("div",{className:"margin-top--md"},l.map(((e,t)=>(0,r.cloneElement)(e,{key:t,hidden:e.props.value!==a}))))}function k(e){const t=f(e);return r.createElement("div",{className:(0,l.Z)("tabs-container",y)},r.createElement(g,(0,a.Z)({},e,t)),r.createElement(T,(0,a.Z)({},e,t)))}function _(e){const t=(0,v.Z)();return r.createElement(k,(0,a.Z)({key:String(t)},e))}},4643:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>s,default:()=>b,frontMatter:()=>i,metadata:()=>u,toc:()=>p});var a=n(7462),r=(n(7294),n(3905)),l=n(4866),o=n(5162);const i={},s="Component Example",u={unversionedId:"getting-started/component-example",id:"getting-started/component-example",title:"Component Example",description:"The following is an example of a basic Tabs component built with Froyo.",source:"@site/docs/getting-started/component-example.md",sourceDirName:"getting-started",slug:"/getting-started/component-example",permalink:"/froyo/docs/getting-started/component-example",draft:!1,editUrl:"https://github.com/marksmccann/froyo/docs/getting-started/component-example.md",tags:[],version:"current",frontMatter:{},sidebar:"docs",previous:{title:"Creating a Component",permalink:"/froyo/docs/getting-started/creating-a-component"},next:{title:"Component Lifecycle",permalink:"/froyo/docs/fundamentals/component-lifecycle"}},c={},p=[{value:"Initial HTML",id:"initial-html",level:2},{value:"Component Definition",id:"component-definition",level:2},{value:"Initialization",id:"initialization",level:2},{value:"Rendered Markup",id:"rendered-markup",level:2}],d={toc:p};function b(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,a.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"component-example"},"Component Example"),(0,r.kt)("p",null,"The following is an example of a basic ",(0,r.kt)("inlineCode",{parentName:"p"},"Tabs")," component built with Froyo."),(0,r.kt)("h2",{id:"initial-html"},"Initial HTML"),(0,r.kt)("p",null,"The initial markup for this component includes the content for three tabs and panels."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-html"},'<div class="tabs">\n    <div class="tabs__tablist">\n        <button class="tabs__tab">Tab 1</button>\n        <button class="tabs__tab">Tab 2</button>\n        <button class="tabs__tab">Tab 3</button>\n    </div>\n    <div class="tabs__panel">Panel 1</div>\n    <div class="tabs__panel">Panel 2</div>\n    <div class="tabs__panel">Panel 3</div>\n</div>\n')),(0,r.kt)("h2",{id:"component-definition"},"Component Definition"),(0,r.kt)("p",null,"This is the ",(0,r.kt)("inlineCode",{parentName:"p"},"Tabs")," component definition using the primary features of the framework."),(0,r.kt)(l.Z,{mdxType:"Tabs"},(0,r.kt)(o.Z,{value:"js",label:"JavaScript",default:!0,mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"import { defineComponent } from 'froyojs';\n\nconst Tabs = defineComponent({\n    state: {\n        activeTab: {\n            type: Number,\n            default: 0,\n        },\n    },\n    nodes: {\n        tablist: {\n            type: 'query',\n            selector: '.tabs__tablist',\n            attributes: { role: 'tablist' },\n        },\n        tabs: {\n            type: 'query-all',\n            selector: 'button.tabs__tab',\n        },\n        panels: {\n            type: 'query-all',\n            selector: '.tabs__panel',\n        },\n    },\n    events: {\n        tabs(index) {\n            return {\n                click: () => {\n                    this.$state.activeTab = index;\n                },\n            };\n        },\n    },\n    render: {\n        tabs(index) {\n            return {\n                classes: {\n                    'tabs__tab--active': this.$state.activeTab === index,\n                },\n                attributes: {\n                    type: 'button',\n                    role: 'tab',\n                    id: `tab-${index}`,\n                    'aria-controls': `panel-${index}`,\n                    'aria-selected': this.$state.activeTab === index ? 'true' : 'false',\n                },\n            };\n        },\n        panels(index) {\n            return {\n                classes: {\n                    'tabs__panel--active': this.$state.activeTab === index,\n                },\n                attributes: {\n                    role: 'tabpanel',\n                    id: `panel-${index}`,\n                    'aria-labelledby': `tab-${index}`,\n                    hidden: this.$state.activeTab !== index,\n                },\n            };\n        },\n    },\n});\n"))),(0,r.kt)(o.Z,{value:"ts",label:"TypeScript",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts"},"import { defineComponent } from 'froyojs';\n\nconst Tabs = defineComponent<{\n    $root: HTMLElement,\n    $state: { activeTab: number };\n    tablist: HTMLElement;\n    tabs: HTMLButtonElement[];\n    panels: HTMLElement[];\n}>({\n    state: {\n        activeTab: {\n            type: Number,\n            default: 0,\n        },\n    },\n    nodes: {\n        tablist: {\n            type: 'query',\n            selector: '.tabs__tablist',\n            attributes: { role: 'tablist' },\n        },\n        tabs: {\n            type: 'query-all',\n            selector: 'button.tabs__tab',\n        },\n        panels: {\n            type: 'query-all',\n            selector: '.tabs__panel',\n        },\n    },\n    events: {\n        tabs(index) {\n            return {\n                click: () => {\n                    this.$state.activeTab = index;\n                },\n            };\n        },\n    },\n    render: {\n        tabs(index) {\n            return {\n                classes: {\n                    'tabs__tab--active': this.$state.activeTab === index,\n                },\n                attributes: {\n                    type: 'button',\n                    role: 'tab',\n                    id: `tab-${index}`,\n                    'aria-controls': `panel-${index}`,\n                    'aria-selected': this.$state.activeTab === index ? 'true' : 'false',\n                },\n            };\n        },\n        panels(index) {\n            return {\n                classes: {\n                    'tabs__panel--active': this.$state.activeTab === index,\n                },\n                attributes: {\n                    role: 'tabpanel',\n                    id: `panel-${index}`,\n                    'aria-labelledby': `tab-${index}`,\n                    hidden: this.$state.activeTab !== index,\n                },\n            };\n        },\n    },\n});\n")))),(0,r.kt)("h2",{id:"initialization"},"Initialization"),(0,r.kt)("p",null,"This is how the component would be initialized."),(0,r.kt)("admonition",{type:"info"},(0,r.kt)("p",{parentName:"admonition"},"Alternatively, components can be initialized with a raw ",(0,r.kt)("a",{parentName:"p",href:"/froyo/docs/api/define-component#constructor"},"query selector")," or ",(0,r.kt)("a",{parentName:"p",href:"/froyo/docs/fundamentals/html-only-usage"},"from the HTML"),".")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"const instance = new Tabs(document.querySelector('.tabs'));\n")),(0,r.kt)("h2",{id:"rendered-markup"},"Rendered Markup"),(0,r.kt)("p",null,"This is what the rendered HTML would look like after initialization."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-html"},'<div class="tabs">\n    <div class="tabs__tablist" role="tablist">\n        <button\n            class="tabs__tab tabs__tab--active"\n            type="button"\n            role="tab"\n            id="tab-0"\n            aria-controls="panel-0"\n            aria-selected="true"\n        >\n            Tab 1\n        </button>\n        <button\n            class="tabs__tab"\n            type="button"\n            role="tab"\n            id="tab-1"\n            aria-controls="panel-1"\n            aria-selected="false"\n        >\n            Tab 2\n        </button>\n        <button\n            class="tabs__tab"\n            type="button"\n            role="tab"\n            id="tab-2"\n            aria-controls="panel-2"\n            aria-selected="false"\n        >\n            Tab 3\n        </button>\n    </div>\n    <div\n        class="tabs__panel tabs__panel--active"\n        role="panel"\n        id="panel-0"\n        aria-labelledby="tab-0"\n    >\n        Panel 1\n    </div>\n    <div\n        class="tabs__panel"\n        role="panel"\n        id="panel-1"\n        aria-labelledby="tab-1"\n        hidden\n    >\n        Panel 2\n    </div>\n    <div\n        class="tabs__panel"\n        role="panel"\n        id="panel-2"\n        aria-labelledby="tab-2"\n        hidden\n    >\n        Panel 3\n    </div>\n</div>\n')))}b.isMDXComponent=!0}}]);