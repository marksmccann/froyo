"use strict";(self.webpackChunkfroyo=self.webpackChunkfroyo||[]).push([[384],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>h});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function s(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?s(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):s(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},s=Object.keys(e);for(r=0;r<s.length;r++)n=s[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(r=0;r<s.length;r++)n=s[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var i=r.createContext({}),u=function(e){var t=r.useContext(i),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},c=function(e){var t=u(e.components);return r.createElement(i.Provider,{value:t},e.children)},d="mdxType",p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,s=e.originalType,i=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),d=u(n),m=a,h=d["".concat(i,".").concat(m)]||d[m]||p[m]||s;return n?r.createElement(h,o(o({ref:t},c),{},{components:n})):r.createElement(h,o({ref:t},c))}));function h(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var s=n.length,o=new Array(s);o[0]=m;var l={};for(var i in t)hasOwnProperty.call(t,i)&&(l[i]=t[i]);l.originalType=e,l[d]="string"==typeof e?e:a,o[1]=l;for(var u=2;u<s;u++)o[u]=n[u];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},5162:(e,t,n)=>{n.d(t,{Z:()=>o});var r=n(7294),a=n(6010);const s="tabItem_Ymn6";function o(e){let{children:t,hidden:n,className:o}=e;return r.createElement("div",{role:"tabpanel",className:(0,a.Z)(s,o),hidden:n},t)}},4866:(e,t,n)=>{n.d(t,{Z:()=>T});var r=n(7462),a=n(7294),s=n(6010),o=n(2466),l=n(6550),i=n(1980),u=n(7392),c=n(12);function d(e){return function(e){return a.Children.map(e,(e=>{if((0,a.isValidElement)(e)&&"value"in e.props)return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))}(e).map((e=>{let{props:{value:t,label:n,attributes:r,default:a}}=e;return{value:t,label:n,attributes:r,default:a}}))}function p(e){const{values:t,children:n}=e;return(0,a.useMemo)((()=>{const e=t??d(n);return function(e){const t=(0,u.l)(e,((e,t)=>e.value===t.value));if(t.length>0)throw new Error(`Docusaurus error: Duplicate values "${t.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[t,n])}function m(e){let{value:t,tabValues:n}=e;return n.some((e=>e.value===t))}function h(e){let{queryString:t=!1,groupId:n}=e;const r=(0,l.k6)(),s=function(e){let{queryString:t=!1,groupId:n}=e;if("string"==typeof t)return t;if(!1===t)return null;if(!0===t&&!n)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return n??null}({queryString:t,groupId:n});return[(0,i._X)(s),(0,a.useCallback)((e=>{if(!s)return;const t=new URLSearchParams(r.location.search);t.set(s,e),r.replace({...r.location,search:t.toString()})}),[s,r])]}function f(e){const{defaultValue:t,queryString:n=!1,groupId:r}=e,s=p(e),[o,l]=(0,a.useState)((()=>function(e){let{defaultValue:t,tabValues:n}=e;if(0===n.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(t){if(!m({value:t,tabValues:n}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${t}" but none of its children has the corresponding value. Available values are: ${n.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return t}const r=n.find((e=>e.default))??n[0];if(!r)throw new Error("Unexpected error: 0 tabValues");return r.value}({defaultValue:t,tabValues:s}))),[i,u]=h({queryString:n,groupId:r}),[d,f]=function(e){let{groupId:t}=e;const n=function(e){return e?`docusaurus.tab.${e}`:null}(t),[r,s]=(0,c.Nk)(n);return[r,(0,a.useCallback)((e=>{n&&s.set(e)}),[n,s])]}({groupId:r}),b=(()=>{const e=i??d;return m({value:e,tabValues:s})?e:null})();(0,a.useLayoutEffect)((()=>{b&&l(b)}),[b]);return{selectedValue:o,selectValue:(0,a.useCallback)((e=>{if(!m({value:e,tabValues:s}))throw new Error(`Can't select invalid tab value=${e}`);l(e),u(e),f(e)}),[u,f,s]),tabValues:s}}var b=n(2389);const g="tabList__CuJ",y="tabItem_LNqP";function v(e){let{className:t,block:n,selectedValue:l,selectValue:i,tabValues:u}=e;const c=[],{blockElementScrollPositionUntilNextRender:d}=(0,o.o5)(),p=e=>{const t=e.currentTarget,n=c.indexOf(t),r=u[n].value;r!==l&&(d(t),i(r))},m=e=>{let t=null;switch(e.key){case"Enter":p(e);break;case"ArrowRight":{const n=c.indexOf(e.currentTarget)+1;t=c[n]??c[0];break}case"ArrowLeft":{const n=c.indexOf(e.currentTarget)-1;t=c[n]??c[c.length-1];break}}t?.focus()};return a.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,s.Z)("tabs",{"tabs--block":n},t)},u.map((e=>{let{value:t,label:n,attributes:o}=e;return a.createElement("li",(0,r.Z)({role:"tab",tabIndex:l===t?0:-1,"aria-selected":l===t,key:t,ref:e=>c.push(e),onKeyDown:m,onClick:p},o,{className:(0,s.Z)("tabs__item",y,o?.className,{"tabs__item--active":l===t})}),n??t)})))}function k(e){let{lazy:t,children:n,selectedValue:r}=e;if(n=Array.isArray(n)?n:[n],t){const e=n.find((e=>e.props.value===r));return e?(0,a.cloneElement)(e,{className:"margin-top--md"}):null}return a.createElement("div",{className:"margin-top--md"},n.map(((e,t)=>(0,a.cloneElement)(e,{key:t,hidden:e.props.value!==r}))))}function C(e){const t=f(e);return a.createElement("div",{className:(0,s.Z)("tabs-container",g)},a.createElement(v,(0,r.Z)({},e,t)),a.createElement(k,(0,r.Z)({},e,t)))}function T(e){const t=(0,b.Z)();return a.createElement(C,(0,r.Z)({key:String(t)},e))}},6751:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>i,default:()=>m,frontMatter:()=>l,metadata:()=>u,toc:()=>d});var r=n(7462),a=(n(7294),n(3905)),s=n(4866),o=n(5162);const l={},i="Creating Listeners",u={unversionedId:"fundamentals/creating-listeners",id:"fundamentals/creating-listeners",title:"Creating Listeners",description:"This guide explains how to create and add various listeners to a component.",source:"@site/docs/fundamentals/creating-listeners.md",sourceDirName:"fundamentals",slug:"/fundamentals/creating-listeners",permalink:"/froyo/docs/fundamentals/creating-listeners",draft:!1,editUrl:"https://github.com/marksmccann/froyo/docs/fundamentals/creating-listeners.md",tags:[],version:"current",frontMatter:{},sidebar:"docs",previous:{title:"DOM Management",permalink:"/froyo/docs/fundamentals/dom-management"},next:{title:"HTML-only Usage",permalink:"/froyo/docs/fundamentals/html-only-usage"}},c={},d=[{value:"Adding Event Listeners",id:"adding-event-listeners",level:2},{value:"Creating Mutation Observers",id:"creating-mutation-observers",level:2},{value:"Creating Media Query Listeners",id:"creating-media-query-listeners",level:2},{value:"Adding Handlers to Instance",id:"adding-handlers-to-instance",level:2},{value:"Adding Custom Listeners",id:"adding-custom-listeners",level:2},{value:"Adding Listeners Manually",id:"adding-listeners-manually",level:2}],p={toc:d};function m(e){let{components:t,...n}=e;return(0,a.kt)("wrapper",(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"creating-listeners"},"Creating Listeners"),(0,a.kt)("p",null,"This guide explains how to create and add various listeners to a component."),(0,a.kt)("h2",{id:"adding-event-listeners"},"Adding Event Listeners"),(0,a.kt)("p",null,"To add an event listener, use the ",(0,a.kt)("a",{parentName:"p",href:"/froyo/docs/api/listener-helpers#addeventlistener"},(0,a.kt)("inlineCode",{parentName:"a"},"addEventListener"))," utility and store the result directly to an object that is assigned to ",(0,a.kt)("a",{parentName:"p",href:"/froyo/docs/api/component#listeners"},(0,a.kt)("inlineCode",{parentName:"a"},"this.listeners")),"."),(0,a.kt)(s.Z,{mdxType:"Tabs"},(0,a.kt)(o.Z,{value:"js",label:"JavaScript",default:!0,mdxType:"TabItem"},(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"import { Component, addEventListener } from 'froyojs';\n\nclass FrozenYogurt extends Component {\n    setup() {\n        this.listeners = {\n            click: addEventListener(this.rootElement, 'click', () => {}),\n        };\n    }\n}\n"))),(0,a.kt)(o.Z,{value:"ts",label:"TypeScript",default:!0,mdxType:"TabItem"},(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts"},"import { Component, addEventListener } from 'froyojs';\nimport type { ComponentEventListener } from 'froyojs';\n\ntype Listeners = {\n    click: ComponentEventListener;\n};\n\nclass FrozenYogurt extends Component<{}, {}, Listeners> {\n    protected setup(): void {\n        this.listeners = {\n            click: addEventListener(this.rootElement, 'click', () => {}),\n        };\n    }\n}\n")))),(0,a.kt)("br",null),(0,a.kt)("hr",null),(0,a.kt)("h2",{id:"creating-mutation-observers"},"Creating Mutation Observers"),(0,a.kt)("p",null,"To create a ",(0,a.kt)("a",{parentName:"p",href:"https://developer.mozilla.org/en-US/docs/Web/API/MutationObserver"},"mutation observer"),", use the ",(0,a.kt)("a",{parentName:"p",href:"/froyo/docs/api/listener-helpers#createmutationobserver"},(0,a.kt)("inlineCode",{parentName:"a"},"createMutationObserver"))," utility and store the result directly to an object that is assigned to ",(0,a.kt)("a",{parentName:"p",href:"/froyo/docs/api/component#listeners"},(0,a.kt)("inlineCode",{parentName:"a"},"this.listeners")),"."),(0,a.kt)(s.Z,{mdxType:"Tabs"},(0,a.kt)(o.Z,{value:"js",label:"JavaScript",default:!0,mdxType:"TabItem"},(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"import { Component, createMutationObserver } from 'froyojs';\n\nclass FrozenYogurt extends Component {\n    setup() {\n        this.listeners = {\n            attributeChange: createMutationObserver(someElement, () => {}, {\n                attributes: true,\n            }),\n        };\n    }\n}\n"))),(0,a.kt)(o.Z,{value:"ts",label:"TypeScript",default:!0,mdxType:"TabItem"},(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts"},"import { Component, createMutationObserver } from 'froyojs';\nimport type { ComponentMutationObserver } from 'froyojs';\n\ntype Listeners = {\n    attributeChange: ComponentMutationObserver;\n};\n\nclass FrozenYogurt extends Component<{}, {}, Listeners> {\n    protected setup(): void {\n        this.listeners = {\n            attributeChange: createMutationObserver(someElement, () => {}, {\n                attributes: true,\n            }),\n        };\n    }\n}\n")))),(0,a.kt)("br",null),(0,a.kt)("hr",null),(0,a.kt)("h2",{id:"creating-media-query-listeners"},"Creating Media Query Listeners"),(0,a.kt)("p",null,"To create a listener for media queries (via ",(0,a.kt)("a",{parentName:"p",href:"https://developer.mozilla.org/en-US/docs/Web/API/Window/matchMedia"},"window.matchMedia"),"), use the ",(0,a.kt)("a",{parentName:"p",href:"/froyo/docs/api/listener-helpers#createmediaquerylistener"},(0,a.kt)("inlineCode",{parentName:"a"},"createMediaQueryListener"))," utility and store the result directly to an object that is assigned to ",(0,a.kt)("a",{parentName:"p",href:"/froyo/docs/api/component#listeners"},(0,a.kt)("inlineCode",{parentName:"a"},"this.listeners")),"."),(0,a.kt)(s.Z,{mdxType:"Tabs"},(0,a.kt)(o.Z,{value:"js",label:"JavaScript",default:!0,mdxType:"TabItem"},(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"import { Component, createMediaQueryListener } from 'froyojs';\n\nclass FrozenYogurt extends Component {\n    setup() {\n        this.listeners = {\n            mediaChanged: createMediaQueryListener(\n                '(min-width: 500px)',\n                () => {}\n            ),\n        };\n    }\n}\n"))),(0,a.kt)(o.Z,{value:"ts",label:"TypeScript",default:!0,mdxType:"TabItem"},(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts"},"import { Component, createMediaQueryListener } from 'froyojs';\nimport type { ComponentMediaQueryListener } from 'froyojs';\n\ntype Listeners = {\n    mediaChanged: ComponentMediaQueryListener;\n};\n\nclass FrozenYogurt extends Component<{}, {}, Listeners> {\n    protected setup(): void {\n        this.listeners = {\n            mediaChanged: createMediaQueryListener(\n                '(min-width: 500px)',\n                () => {}\n            ),\n        };\n    }\n}\n")))),(0,a.kt)("br",null),(0,a.kt)("hr",null),(0,a.kt)("h2",{id:"adding-handlers-to-instance"},"Adding Handlers to Instance"),(0,a.kt)("p",null,"When needed, callback handlers can be added to the instance as class methods."),(0,a.kt)("admonition",{type:"tip"},(0,a.kt)("p",{parentName:"admonition"},"Remember to ",(0,a.kt)("a",{parentName:"p",href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/bind"},"bind")," the handler to the instance so that ",(0,a.kt)("inlineCode",{parentName:"p"},"this")," will refer to the instance instead of the listener's target element.")),(0,a.kt)(s.Z,{mdxType:"Tabs"},(0,a.kt)(o.Z,{value:"js",label:"JavaScript",default:!0,mdxType:"TabItem"},(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"class FrozenYogurt extends Component {\n    setup() {\n        this.listeners = {\n            click: addEventListener(\n                this.rootElement,\n                'click',\n                this.handleClick.bind(this) // bind to instance\n            ),\n        };\n    }\n\n    handleClick() {\n        // do something ...\n    }\n}\n"))),(0,a.kt)(o.Z,{value:"ts",label:"TypeScript",default:!0,mdxType:"TabItem"},(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts"},"class FrozenYogurt extends Component<{}, {}, Listeners> {\n    protected setup(): void {\n        this.listeners = {\n            click: addEventListener(\n                this.rootElement,\n                'click',\n                this.handleClick.bind(this) // bind to instance\n            ),\n        };\n    }\n\n    protected handleClick(): void {\n        // do something ...\n    }\n}\n")))),(0,a.kt)("br",null),(0,a.kt)("hr",null),(0,a.kt)("h2",{id:"adding-custom-listeners"},"Adding Custom Listeners"),(0,a.kt)("p",null,"Custom listener can also be assigned to ",(0,a.kt)("a",{parentName:"p",href:"/froyo/docs/api/listener-helpers"},(0,a.kt)("inlineCode",{parentName:"a"},"this.listeners")),'. This property expects each key to be a simple object with a "destroy" function. As long as that simple criteria is met, it can be used with any listener.'),(0,a.kt)(s.Z,{mdxType:"Tabs"},(0,a.kt)(o.Z,{value:"js",label:"JavaScript",default:!0,mdxType:"TabItem"},(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"class FrozenYogurt extends Component {\n    setup() {\n        this.listeners = {\n            myCustomListener: {\n                destroy() {\n                    // remove the custom listener ...\n                },\n            },\n        };\n    }\n}\n"))),(0,a.kt)(o.Z,{value:"ts",label:"TypeScript",default:!0,mdxType:"TabItem"},(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts"},"import type { ComponentListener } from 'froyojs';\n\ntype Listeners = {\n    myCustomListener: ComponentListener;\n};\n\nclass FrozenYogurt extends Component<{}, {}, Listeners> {\n    protected setup(): void {\n        this.listeners = {\n            myCustomListener: {\n                destroy() {\n                    // remove the custom listener ...\n                },\n            },\n        };\n    }\n}\n")))),(0,a.kt)("p",null,"For example, the third-party package ",(0,a.kt)("a",{parentName:"p",href:"https://www.npmjs.com/package/delegate"},"delegate")," coincidentally supports the same API and can be used to create delegated event listeners that can be assigned directly to the class."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"import delegate from 'delegate';\n\nthis.listeners = {\n    myCustomListener: delegate(\n        this.rootElement,\n        '<some selector>',\n        'click',\n        this.handleClick.bind(this),\n        false\n    ),\n};\n")),(0,a.kt)("br",null),(0,a.kt)("hr",null),(0,a.kt)("h2",{id:"adding-listeners-manually"},"Adding Listeners Manually"),(0,a.kt)("p",null,"While not recommended, it is possible to add listeners manually. For example, this is how one would use ",(0,a.kt)("a",{parentName:"p",href:"https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener"},"EventTarget.addEventListener")," out-of-the-box."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"import { Component } from 'froyojs';\n\nclass FrozenYogurt extends Component {\n    setup() {\n        this.handleClick = () => {};\n\n        // add the event listener\n        this.rootElement.addEventListener('click', this.handleClick);\n    }\n\n    destroy() {\n        // remove the event listener\n        this.rootElement.removeEventListener('click', this.handleClick);\n\n        super.destroy(); // destroy the parent class\n    }\n}\n")))}m.isMDXComponent=!0}}]);